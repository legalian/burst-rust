<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1686" onload="init(evt)" viewBox="0 0 1200 1686" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1686" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1669.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1669.00"> </text><svg id="frames" x="10" width="1180" total_samples="783"><g><title>burst`burst::main (1 samples, 0.13%)</title><rect x="0.0000%" y="1621" width="0.1277%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1631.50"></text></g><g><title>burst`burst::synthesis::synthesize (1 samples, 0.13%)</title><rect x="0.0000%" y="1605" width="0.1277%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1615.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1589" width="0.1277%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1599.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1573" width="0.1277%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1583.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1557" width="0.1277%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1567.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1541" width="0.1277%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1551.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1525" width="0.1277%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1535.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1509" width="0.1277%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1519.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1493" width="0.1277%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1503.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1477" width="0.1277%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1487.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1461" width="0.1277%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1471.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1445" width="0.1277%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1455.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1429" width="0.1277%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1439.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1413" width="0.1277%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1423.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1397" width="0.1277%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1407.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1381" width="0.1277%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1391.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1365" width="0.1277%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1375.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1349" width="0.1277%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1359.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1333" width="0.1277%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1343.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1317" width="0.1277%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1327.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1301" width="0.1277%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1311.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1285" width="0.1277%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1295.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1269" width="0.1277%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1279.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1253" width="0.1277%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1263.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1237" width="0.1277%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1247.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1221" width="0.1277%" height="15" fill="rgb(249,31,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1231.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1205" width="0.1277%" height="15" fill="rgb(225,111,53)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1215.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1189" width="0.1277%" height="15" fill="rgb(238,160,17)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1199.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1173" width="0.1277%" height="15" fill="rgb(214,148,48)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1183.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1157" width="0.1277%" height="15" fill="rgb(232,36,49)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1167.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1141" width="0.1277%" height="15" fill="rgb(209,103,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1151.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1125" width="0.1277%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1135.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1109" width="0.1277%" height="15" fill="rgb(213,181,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1119.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1093" width="0.1277%" height="15" fill="rgb(254,191,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1103.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1077" width="0.1277%" height="15" fill="rgb(241,83,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1087.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1061" width="0.1277%" height="15" fill="rgb(233,36,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1071.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1045" width="0.1277%" height="15" fill="rgb(226,3,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1055.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1029" width="0.1277%" height="15" fill="rgb(245,192,40)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1039.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="1013" width="0.1277%" height="15" fill="rgb(238,167,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1023.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="997" width="0.1277%" height="15" fill="rgb(232,182,51)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1007.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="981" width="0.1277%" height="15" fill="rgb(231,60,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="991.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="965" width="0.1277%" height="15" fill="rgb(208,69,12)" fg:x="0" fg:w="1"/><text x="0.2500%" y="975.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="949" width="0.1277%" height="15" fill="rgb(235,93,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="959.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="933" width="0.1277%" height="15" fill="rgb(213,116,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="943.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="917" width="0.1277%" height="15" fill="rgb(222,207,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="927.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="901" width="0.1277%" height="15" fill="rgb(206,96,30)" fg:x="0" fg:w="1"/><text x="0.2500%" y="911.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="885" width="0.1277%" height="15" fill="rgb(218,138,4)" fg:x="0" fg:w="1"/><text x="0.2500%" y="895.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="869" width="0.1277%" height="15" fill="rgb(250,191,14)" fg:x="0" fg:w="1"/><text x="0.2500%" y="879.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="853" width="0.1277%" height="15" fill="rgb(239,60,40)" fg:x="0" fg:w="1"/><text x="0.2500%" y="863.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="837" width="0.1277%" height="15" fill="rgb(206,27,48)" fg:x="0" fg:w="1"/><text x="0.2500%" y="847.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="821" width="0.1277%" height="15" fill="rgb(225,35,8)" fg:x="0" fg:w="1"/><text x="0.2500%" y="831.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="805" width="0.1277%" height="15" fill="rgb(250,213,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="815.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="789" width="0.1277%" height="15" fill="rgb(247,123,22)" fg:x="0" fg:w="1"/><text x="0.2500%" y="799.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="773" width="0.1277%" height="15" fill="rgb(231,138,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="783.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="757" width="0.1277%" height="15" fill="rgb(231,145,46)" fg:x="0" fg:w="1"/><text x="0.2500%" y="767.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="741" width="0.1277%" height="15" fill="rgb(251,118,11)" fg:x="0" fg:w="1"/><text x="0.2500%" y="751.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="725" width="0.1277%" height="15" fill="rgb(217,147,25)" fg:x="0" fg:w="1"/><text x="0.2500%" y="735.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="709" width="0.1277%" height="15" fill="rgb(247,81,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="719.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="693" width="0.1277%" height="15" fill="rgb(209,12,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="703.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="677" width="0.1277%" height="15" fill="rgb(227,1,9)" fg:x="0" fg:w="1"/><text x="0.2500%" y="687.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="661" width="0.1277%" height="15" fill="rgb(248,47,43)" fg:x="0" fg:w="1"/><text x="0.2500%" y="671.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="645" width="0.1277%" height="15" fill="rgb(221,10,30)" fg:x="0" fg:w="1"/><text x="0.2500%" y="655.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="629" width="0.1277%" height="15" fill="rgb(210,229,1)" fg:x="0" fg:w="1"/><text x="0.2500%" y="639.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="613" width="0.1277%" height="15" fill="rgb(222,148,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="623.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="597" width="0.1277%" height="15" fill="rgb(234,67,33)" fg:x="0" fg:w="1"/><text x="0.2500%" y="607.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="581" width="0.1277%" height="15" fill="rgb(247,98,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="591.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="565" width="0.1277%" height="15" fill="rgb(247,138,52)" fg:x="0" fg:w="1"/><text x="0.2500%" y="575.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="549" width="0.1277%" height="15" fill="rgb(213,79,30)" fg:x="0" fg:w="1"/><text x="0.2500%" y="559.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="533" width="0.1277%" height="15" fill="rgb(246,177,23)" fg:x="0" fg:w="1"/><text x="0.2500%" y="543.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="517" width="0.1277%" height="15" fill="rgb(230,62,27)" fg:x="0" fg:w="1"/><text x="0.2500%" y="527.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="501" width="0.1277%" height="15" fill="rgb(216,154,8)" fg:x="0" fg:w="1"/><text x="0.2500%" y="511.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="485" width="0.1277%" height="15" fill="rgb(244,35,45)" fg:x="0" fg:w="1"/><text x="0.2500%" y="495.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="469" width="0.1277%" height="15" fill="rgb(251,115,12)" fg:x="0" fg:w="1"/><text x="0.2500%" y="479.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="453" width="0.1277%" height="15" fill="rgb(240,54,50)" fg:x="0" fg:w="1"/><text x="0.2500%" y="463.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="437" width="0.1277%" height="15" fill="rgb(233,84,52)" fg:x="0" fg:w="1"/><text x="0.2500%" y="447.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="421" width="0.1277%" height="15" fill="rgb(207,117,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="431.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="405" width="0.1277%" height="15" fill="rgb(249,43,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="415.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="389" width="0.1277%" height="15" fill="rgb(209,38,44)" fg:x="0" fg:w="1"/><text x="0.2500%" y="399.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="373" width="0.1277%" height="15" fill="rgb(236,212,23)" fg:x="0" fg:w="1"/><text x="0.2500%" y="383.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="357" width="0.1277%" height="15" fill="rgb(242,79,21)" fg:x="0" fg:w="1"/><text x="0.2500%" y="367.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="341" width="0.1277%" height="15" fill="rgb(211,96,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="351.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="325" width="0.1277%" height="15" fill="rgb(253,215,40)" fg:x="0" fg:w="1"/><text x="0.2500%" y="335.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="309" width="0.1277%" height="15" fill="rgb(211,81,21)" fg:x="0" fg:w="1"/><text x="0.2500%" y="319.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="293" width="0.1277%" height="15" fill="rgb(208,190,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="303.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="277" width="0.1277%" height="15" fill="rgb(235,213,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="287.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="261" width="0.1277%" height="15" fill="rgb(237,122,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="271.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="245" width="0.1277%" height="15" fill="rgb(244,218,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="255.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="229" width="0.1277%" height="15" fill="rgb(240,68,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="239.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="213" width="0.1277%" height="15" fill="rgb(210,16,53)" fg:x="0" fg:w="1"/><text x="0.2500%" y="223.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="197" width="0.1277%" height="15" fill="rgb(235,124,12)" fg:x="0" fg:w="1"/><text x="0.2500%" y="207.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="181" width="0.1277%" height="15" fill="rgb(224,169,11)" fg:x="0" fg:w="1"/><text x="0.2500%" y="191.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="165" width="0.1277%" height="15" fill="rgb(250,166,2)" fg:x="0" fg:w="1"/><text x="0.2500%" y="175.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="149" width="0.1277%" height="15" fill="rgb(242,216,29)" fg:x="0" fg:w="1"/><text x="0.2500%" y="159.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="133" width="0.1277%" height="15" fill="rgb(230,116,27)" fg:x="0" fg:w="1"/><text x="0.2500%" y="143.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="0.0000%" y="117" width="0.1277%" height="15" fill="rgb(228,99,48)" fg:x="0" fg:w="1"/><text x="0.2500%" y="127.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.13%)</title><rect x="0.0000%" y="101" width="0.1277%" height="15" fill="rgb(253,11,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="111.50"></text></g><g><title>burst`alloc::raw_vec::finish_grow (1 samples, 0.13%)</title><rect x="0.0000%" y="85" width="0.1277%" height="15" fill="rgb(247,143,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.13%)</title><rect x="0.0000%" y="69" width="0.1277%" height="15" fill="rgb(236,97,10)" fg:x="0" fg:w="1"/><text x="0.2500%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.13%)</title><rect x="0.0000%" y="53" width="0.1277%" height="15" fill="rgb(233,208,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="63.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.13%)</title><rect x="0.0000%" y="37" width="0.1277%" height="15" fill="rgb(216,164,2)" fg:x="0" fg:w="1"/><text x="0.2500%" y="47.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="0.2554%" y="1557" width="0.1277%" height="15" fill="rgb(220,129,5)" fg:x="2" fg:w="1"/><text x="0.5054%" y="1567.50"></text></g><g><title>burst`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="0.2554%" y="1541" width="0.1277%" height="15" fill="rgb(242,17,10)" fg:x="2" fg:w="1"/><text x="0.5054%" y="1551.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.13%)</title><rect x="0.2554%" y="1525" width="0.1277%" height="15" fill="rgb(242,107,0)" fg:x="2" fg:w="1"/><text x="0.5054%" y="1535.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.13%)</title><rect x="0.2554%" y="1509" width="0.1277%" height="15" fill="rgb(251,28,31)" fg:x="2" fg:w="1"/><text x="0.5054%" y="1519.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.13%)</title><rect x="0.2554%" y="1493" width="0.1277%" height="15" fill="rgb(233,223,10)" fg:x="2" fg:w="1"/><text x="0.5054%" y="1503.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.13%)</title><rect x="0.2554%" y="1477" width="0.1277%" height="15" fill="rgb(215,21,27)" fg:x="2" fg:w="1"/><text x="0.5054%" y="1487.50"></text></g><g><title>burst`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="0.5109%" y="1365" width="0.1277%" height="15" fill="rgb(232,23,21)" fg:x="4" fg:w="1"/><text x="0.7609%" y="1375.50"></text></g><g><title>burst`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 2.04%)</title><rect x="0.6386%" y="1301" width="2.0434%" height="15" fill="rgb(244,5,23)" fg:x="5" fg:w="16"/><text x="0.8886%" y="1311.50">b..</text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (18 samples, 2.30%)</title><rect x="0.6386%" y="1349" width="2.2989%" height="15" fill="rgb(226,81,46)" fg:x="5" fg:w="18"/><text x="0.8886%" y="1359.50">b..</text></g><g><title>burst`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (18 samples, 2.30%)</title><rect x="0.6386%" y="1333" width="2.2989%" height="15" fill="rgb(247,70,30)" fg:x="5" fg:w="18"/><text x="0.8886%" y="1343.50">b..</text></g><g><title>burst`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (18 samples, 2.30%)</title><rect x="0.6386%" y="1317" width="2.2989%" height="15" fill="rgb(212,68,19)" fg:x="5" fg:w="18"/><text x="0.8886%" y="1327.50">b..</text></g><g><title>burst`hashbrown::map::make_hash (2 samples, 0.26%)</title><rect x="2.6820%" y="1301" width="0.2554%" height="15" fill="rgb(240,187,13)" fg:x="21" fg:w="2"/><text x="2.9320%" y="1311.50"></text></g><g><title>burst`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="2.9374%" y="1333" width="0.1277%" height="15" fill="rgb(223,113,26)" fg:x="23" fg:w="1"/><text x="3.1874%" y="1343.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="3.0651%" y="1317" width="0.1277%" height="15" fill="rgb(206,192,2)" fg:x="24" fg:w="1"/><text x="3.3151%" y="1327.50"></text></g><g><title>burst`core::slice::sort::shift_tail (1 samples, 0.13%)</title><rect x="3.0651%" y="1301" width="0.1277%" height="15" fill="rgb(241,108,4)" fg:x="24" fg:w="1"/><text x="3.3151%" y="1311.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="3.1928%" y="1301" width="0.1277%" height="15" fill="rgb(247,173,49)" fg:x="25" fg:w="1"/><text x="3.4428%" y="1311.50"></text></g><g><title>burst`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="3.1928%" y="1285" width="0.1277%" height="15" fill="rgb(224,114,35)" fg:x="25" fg:w="1"/><text x="3.4428%" y="1295.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.13%)</title><rect x="3.1928%" y="1269" width="0.1277%" height="15" fill="rgb(245,159,27)" fg:x="25" fg:w="1"/><text x="3.4428%" y="1279.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.13%)</title><rect x="3.1928%" y="1253" width="0.1277%" height="15" fill="rgb(245,172,44)" fg:x="25" fg:w="1"/><text x="3.4428%" y="1263.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.13%)</title><rect x="3.1928%" y="1237" width="0.1277%" height="15" fill="rgb(236,23,11)" fg:x="25" fg:w="1"/><text x="3.4428%" y="1247.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.13%)</title><rect x="3.1928%" y="1221" width="0.1277%" height="15" fill="rgb(205,117,38)" fg:x="25" fg:w="1"/><text x="3.4428%" y="1231.50"></text></g><g><title>burst`__rdl_alloc (1 samples, 0.13%)</title><rect x="3.3206%" y="1189" width="0.1277%" height="15" fill="rgb(237,72,25)" fg:x="26" fg:w="1"/><text x="3.5706%" y="1199.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.26%)</title><rect x="3.3206%" y="1205" width="0.2554%" height="15" fill="rgb(244,70,9)" fg:x="26" fg:w="2"/><text x="3.5706%" y="1215.50"></text></g><g><title>burst`alloc::raw_vec::finish_grow (1 samples, 0.13%)</title><rect x="3.4483%" y="1189" width="0.1277%" height="15" fill="rgb(217,125,39)" fg:x="27" fg:w="1"/><text x="3.6983%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.13%)</title><rect x="3.4483%" y="1173" width="0.1277%" height="15" fill="rgb(235,36,10)" fg:x="27" fg:w="1"/><text x="3.6983%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.13%)</title><rect x="3.4483%" y="1157" width="0.1277%" height="15" fill="rgb(251,123,47)" fg:x="27" fg:w="1"/><text x="3.6983%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.13%)</title><rect x="3.4483%" y="1141" width="0.1277%" height="15" fill="rgb(221,13,13)" fg:x="27" fg:w="1"/><text x="3.6983%" y="1151.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="3.5760%" y="1157" width="0.1277%" height="15" fill="rgb(238,131,9)" fg:x="28" fg:w="1"/><text x="3.8260%" y="1167.50"></text></g><g><title>burst`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="3.5760%" y="1141" width="0.1277%" height="15" fill="rgb(211,50,8)" fg:x="28" fg:w="1"/><text x="3.8260%" y="1151.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.13%)</title><rect x="3.7037%" y="1141" width="0.1277%" height="15" fill="rgb(245,182,24)" fg:x="29" fg:w="1"/><text x="3.9537%" y="1151.50"></text></g><g><title>burst`DYLD-STUB$$malloc (1 samples, 0.13%)</title><rect x="3.7037%" y="1125" width="0.1277%" height="15" fill="rgb(242,14,37)" fg:x="29" fg:w="1"/><text x="3.9537%" y="1135.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="3.8314%" y="1141" width="0.1277%" height="15" fill="rgb(246,228,12)" fg:x="30" fg:w="1"/><text x="4.0814%" y="1151.50"></text></g><g><title>burst`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="3.8314%" y="1125" width="0.1277%" height="15" fill="rgb(213,55,15)" fg:x="30" fg:w="1"/><text x="4.0814%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.13%)</title><rect x="3.8314%" y="1109" width="0.1277%" height="15" fill="rgb(209,9,3)" fg:x="30" fg:w="1"/><text x="4.0814%" y="1119.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="4.0868%" y="1125" width="0.1277%" height="15" fill="rgb(230,59,30)" fg:x="32" fg:w="1"/><text x="4.3368%" y="1135.50"></text></g><g><title>burst`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="4.0868%" y="1109" width="0.1277%" height="15" fill="rgb(209,121,21)" fg:x="32" fg:w="1"/><text x="4.3368%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.13%)</title><rect x="4.0868%" y="1093" width="0.1277%" height="15" fill="rgb(220,109,13)" fg:x="32" fg:w="1"/><text x="4.3368%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.13%)</title><rect x="4.0868%" y="1077" width="0.1277%" height="15" fill="rgb(232,18,1)" fg:x="32" fg:w="1"/><text x="4.3368%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.13%)</title><rect x="4.0868%" y="1061" width="0.1277%" height="15" fill="rgb(215,41,42)" fg:x="32" fg:w="1"/><text x="4.3368%" y="1071.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.13%)</title><rect x="4.2146%" y="1109" width="0.1277%" height="15" fill="rgb(224,123,36)" fg:x="33" fg:w="1"/><text x="4.4646%" y="1119.50"></text></g><g><title>burst`alloc::raw_vec::finish_grow (1 samples, 0.13%)</title><rect x="4.2146%" y="1093" width="0.1277%" height="15" fill="rgb(240,125,3)" fg:x="33" fg:w="1"/><text x="4.4646%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.13%)</title><rect x="4.2146%" y="1077" width="0.1277%" height="15" fill="rgb(205,98,50)" fg:x="33" fg:w="1"/><text x="4.4646%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.13%)</title><rect x="4.2146%" y="1061" width="0.1277%" height="15" fill="rgb(205,185,37)" fg:x="33" fg:w="1"/><text x="4.4646%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.13%)</title><rect x="4.2146%" y="1045" width="0.1277%" height="15" fill="rgb(238,207,15)" fg:x="33" fg:w="1"/><text x="4.4646%" y="1055.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="4.3423%" y="997" width="0.1277%" height="15" fill="rgb(213,199,42)" fg:x="34" fg:w="1"/><text x="4.5923%" y="1007.50"></text></g><g><title>burst`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="4.3423%" y="981" width="0.1277%" height="15" fill="rgb(235,201,11)" fg:x="34" fg:w="1"/><text x="4.5923%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.13%)</title><rect x="4.3423%" y="965" width="0.1277%" height="15" fill="rgb(207,46,11)" fg:x="34" fg:w="1"/><text x="4.5923%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.13%)</title><rect x="4.3423%" y="949" width="0.1277%" height="15" fill="rgb(241,35,35)" fg:x="34" fg:w="1"/><text x="4.5923%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.13%)</title><rect x="4.3423%" y="933" width="0.1277%" height="15" fill="rgb(243,32,47)" fg:x="34" fg:w="1"/><text x="4.5923%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.13%)</title><rect x="4.3423%" y="917" width="0.1277%" height="15" fill="rgb(247,202,23)" fg:x="34" fg:w="1"/><text x="4.5923%" y="927.50"></text></g><g><title>burst`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="4.4700%" y="981" width="0.1277%" height="15" fill="rgb(219,102,11)" fg:x="35" fg:w="1"/><text x="4.7200%" y="991.50"></text></g><g><title>burst`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="4.5977%" y="965" width="0.1277%" height="15" fill="rgb(243,110,44)" fg:x="36" fg:w="1"/><text x="4.8477%" y="975.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (2 samples, 0.26%)</title><rect x="4.5977%" y="981" width="0.2554%" height="15" fill="rgb(222,74,54)" fg:x="36" fg:w="2"/><text x="4.8477%" y="991.50"></text></g><g><title>burst`core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="4.7254%" y="965" width="0.1277%" height="15" fill="rgb(216,99,12)" fg:x="37" fg:w="1"/><text x="4.9754%" y="975.50"></text></g><g><title>burst`core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="4.7254%" y="949" width="0.1277%" height="15" fill="rgb(226,22,26)" fg:x="37" fg:w="1"/><text x="4.9754%" y="959.50"></text></g><g><title>burst`core::slice::sort::shift_tail (1 samples, 0.13%)</title><rect x="4.7254%" y="933" width="0.1277%" height="15" fill="rgb(217,163,10)" fg:x="37" fg:w="1"/><text x="4.9754%" y="943.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.13%)</title><rect x="4.9808%" y="901" width="0.1277%" height="15" fill="rgb(213,25,53)" fg:x="39" fg:w="1"/><text x="5.2308%" y="911.50"></text></g><g><title>burst`alloc::raw_vec::finish_grow (1 samples, 0.13%)</title><rect x="4.9808%" y="885" width="0.1277%" height="15" fill="rgb(252,105,26)" fg:x="39" fg:w="1"/><text x="5.2308%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.13%)</title><rect x="4.9808%" y="869" width="0.1277%" height="15" fill="rgb(220,39,43)" fg:x="39" fg:w="1"/><text x="5.2308%" y="879.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="5.1086%" y="901" width="0.1277%" height="15" fill="rgb(229,68,48)" fg:x="40" fg:w="1"/><text x="5.3586%" y="911.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.13%)</title><rect x="5.2363%" y="789" width="0.1277%" height="15" fill="rgb(252,8,32)" fg:x="41" fg:w="1"/><text x="5.4863%" y="799.50"></text></g><g><title>burst`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="5.3640%" y="757" width="0.1277%" height="15" fill="rgb(223,20,43)" fg:x="42" fg:w="1"/><text x="5.6140%" y="767.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="5.4917%" y="757" width="0.1277%" height="15" fill="rgb(229,81,49)" fg:x="43" fg:w="1"/><text x="5.7417%" y="767.50"></text></g><g><title>burst`core::slice::sort::shift_tail (1 samples, 0.13%)</title><rect x="5.4917%" y="741" width="0.1277%" height="15" fill="rgb(236,28,36)" fg:x="43" fg:w="1"/><text x="5.7417%" y="751.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="5.6194%" y="725" width="0.1277%" height="15" fill="rgb(249,185,26)" fg:x="44" fg:w="1"/><text x="5.8694%" y="735.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.13%)</title><rect x="5.7471%" y="709" width="0.1277%" height="15" fill="rgb(249,174,33)" fg:x="45" fg:w="1"/><text x="5.9971%" y="719.50"></text></g><g><title>burst`alloc::raw_vec::finish_grow (1 samples, 0.13%)</title><rect x="5.7471%" y="693" width="0.1277%" height="15" fill="rgb(233,201,37)" fg:x="45" fg:w="1"/><text x="5.9971%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.13%)</title><rect x="5.7471%" y="677" width="0.1277%" height="15" fill="rgb(221,78,26)" fg:x="45" fg:w="1"/><text x="5.9971%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.13%)</title><rect x="5.7471%" y="661" width="0.1277%" height="15" fill="rgb(250,127,30)" fg:x="45" fg:w="1"/><text x="5.9971%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.13%)</title><rect x="5.7471%" y="645" width="0.1277%" height="15" fill="rgb(230,49,44)" fg:x="45" fg:w="1"/><text x="5.9971%" y="655.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="5.8748%" y="709" width="0.1277%" height="15" fill="rgb(229,67,23)" fg:x="46" fg:w="1"/><text x="6.1248%" y="719.50"></text></g><g><title>burst`core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="5.8748%" y="693" width="0.1277%" height="15" fill="rgb(249,83,47)" fg:x="46" fg:w="1"/><text x="6.1248%" y="703.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.13%)</title><rect x="6.0026%" y="693" width="0.1277%" height="15" fill="rgb(215,43,3)" fg:x="47" fg:w="1"/><text x="6.2526%" y="703.50"></text></g><g><title>burst`alloc::raw_vec::finish_grow (1 samples, 0.13%)</title><rect x="6.0026%" y="677" width="0.1277%" height="15" fill="rgb(238,154,13)" fg:x="47" fg:w="1"/><text x="6.2526%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.13%)</title><rect x="6.0026%" y="661" width="0.1277%" height="15" fill="rgb(219,56,2)" fg:x="47" fg:w="1"/><text x="6.2526%" y="671.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="6.1303%" y="645" width="0.1277%" height="15" fill="rgb(233,0,4)" fg:x="48" fg:w="1"/><text x="6.3803%" y="655.50"></text></g><g><title>burst`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="6.1303%" y="629" width="0.1277%" height="15" fill="rgb(235,30,7)" fg:x="48" fg:w="1"/><text x="6.3803%" y="639.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.13%)</title><rect x="6.3857%" y="597" width="0.1277%" height="15" fill="rgb(250,79,13)" fg:x="50" fg:w="1"/><text x="6.6357%" y="607.50"></text></g><g><title>burst`DYLD-STUB$$malloc (1 samples, 0.13%)</title><rect x="6.3857%" y="581" width="0.1277%" height="15" fill="rgb(211,146,34)" fg:x="50" fg:w="1"/><text x="6.6357%" y="591.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="6.5134%" y="581" width="0.1277%" height="15" fill="rgb(228,22,38)" fg:x="51" fg:w="1"/><text x="6.7634%" y="591.50"></text></g><g><title>burst`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="6.5134%" y="565" width="0.1277%" height="15" fill="rgb(235,168,5)" fg:x="51" fg:w="1"/><text x="6.7634%" y="575.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="6.7688%" y="533" width="0.1277%" height="15" fill="rgb(221,155,16)" fg:x="53" fg:w="1"/><text x="7.0188%" y="543.50"></text></g><g><title>burst`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="6.7688%" y="517" width="0.1277%" height="15" fill="rgb(215,215,53)" fg:x="53" fg:w="1"/><text x="7.0188%" y="527.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.13%)</title><rect x="7.0243%" y="485" width="0.1277%" height="15" fill="rgb(223,4,10)" fg:x="55" fg:w="1"/><text x="7.2743%" y="495.50"></text></g><g><title>burst`alloc::raw_vec::finish_grow (1 samples, 0.13%)</title><rect x="7.0243%" y="469" width="0.1277%" height="15" fill="rgb(234,103,6)" fg:x="55" fg:w="1"/><text x="7.2743%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.13%)</title><rect x="7.0243%" y="453" width="0.1277%" height="15" fill="rgb(227,97,0)" fg:x="55" fg:w="1"/><text x="7.2743%" y="463.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="7.1520%" y="485" width="0.1277%" height="15" fill="rgb(234,150,53)" fg:x="56" fg:w="1"/><text x="7.4020%" y="495.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.13%)</title><rect x="7.2797%" y="453" width="0.1277%" height="15" fill="rgb(228,201,54)" fg:x="57" fg:w="1"/><text x="7.5297%" y="463.50"></text></g><g><title>burst`alloc::raw_vec::finish_grow (1 samples, 0.13%)</title><rect x="7.2797%" y="437" width="0.1277%" height="15" fill="rgb(222,22,37)" fg:x="57" fg:w="1"/><text x="7.5297%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.13%)</title><rect x="7.2797%" y="421" width="0.1277%" height="15" fill="rgb(237,53,32)" fg:x="57" fg:w="1"/><text x="7.5297%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.13%)</title><rect x="7.2797%" y="405" width="0.1277%" height="15" fill="rgb(233,25,53)" fg:x="57" fg:w="1"/><text x="7.5297%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.13%)</title><rect x="7.2797%" y="389" width="0.1277%" height="15" fill="rgb(210,40,34)" fg:x="57" fg:w="1"/><text x="7.5297%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.13%)</title><rect x="7.2797%" y="373" width="0.1277%" height="15" fill="rgb(241,220,44)" fg:x="57" fg:w="1"/><text x="7.5297%" y="383.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="7.4074%" y="453" width="0.1277%" height="15" fill="rgb(235,28,35)" fg:x="58" fg:w="1"/><text x="7.6574%" y="463.50"></text></g><g><title>burst`core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="7.4074%" y="437" width="0.1277%" height="15" fill="rgb(210,56,17)" fg:x="58" fg:w="1"/><text x="7.6574%" y="447.50"></text></g><g><title>burst`core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="7.4074%" y="421" width="0.1277%" height="15" fill="rgb(224,130,29)" fg:x="58" fg:w="1"/><text x="7.6574%" y="431.50"></text></g><g><title>burst`core::slice::sort::shift_tail (1 samples, 0.13%)</title><rect x="7.4074%" y="405" width="0.1277%" height="15" fill="rgb(235,212,8)" fg:x="58" fg:w="1"/><text x="7.6574%" y="415.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.13%)</title><rect x="7.6628%" y="421" width="0.1277%" height="15" fill="rgb(223,33,50)" fg:x="60" fg:w="1"/><text x="7.9128%" y="431.50"></text></g><g><title>burst`alloc::raw_vec::finish_grow (1 samples, 0.13%)</title><rect x="7.6628%" y="405" width="0.1277%" height="15" fill="rgb(219,149,13)" fg:x="60" fg:w="1"/><text x="7.9128%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.13%)</title><rect x="7.6628%" y="389" width="0.1277%" height="15" fill="rgb(250,156,29)" fg:x="60" fg:w="1"/><text x="7.9128%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.13%)</title><rect x="7.6628%" y="373" width="0.1277%" height="15" fill="rgb(216,193,19)" fg:x="60" fg:w="1"/><text x="7.9128%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.13%)</title><rect x="7.6628%" y="357" width="0.1277%" height="15" fill="rgb(216,135,14)" fg:x="60" fg:w="1"/><text x="7.9128%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.13%)</title><rect x="7.6628%" y="341" width="0.1277%" height="15" fill="rgb(241,47,5)" fg:x="60" fg:w="1"/><text x="7.9128%" y="351.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.13%)</title><rect x="7.7905%" y="277" width="0.1277%" height="15" fill="rgb(233,42,35)" fg:x="61" fg:w="1"/><text x="8.0405%" y="287.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="7.9183%" y="261" width="0.1277%" height="15" fill="rgb(231,13,6)" fg:x="62" fg:w="1"/><text x="8.1683%" y="271.50"></text></g><g><title>burst`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="7.9183%" y="245" width="0.1277%" height="15" fill="rgb(207,181,40)" fg:x="62" fg:w="1"/><text x="8.1683%" y="255.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.13%)</title><rect x="8.0460%" y="245" width="0.1277%" height="15" fill="rgb(254,173,49)" fg:x="63" fg:w="1"/><text x="8.2960%" y="255.50"></text></g><g><title>burst`alloc::raw_vec::finish_grow (1 samples, 0.13%)</title><rect x="8.0460%" y="229" width="0.1277%" height="15" fill="rgb(221,1,38)" fg:x="63" fg:w="1"/><text x="8.2960%" y="239.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="8.1737%" y="229" width="0.1277%" height="15" fill="rgb(206,124,46)" fg:x="64" fg:w="1"/><text x="8.4237%" y="239.50"></text></g><g><title>burst`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="8.1737%" y="213" width="0.1277%" height="15" fill="rgb(249,21,11)" fg:x="64" fg:w="1"/><text x="8.4237%" y="223.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="8.3014%" y="213" width="0.1277%" height="15" fill="rgb(222,201,40)" fg:x="65" fg:w="1"/><text x="8.5514%" y="223.50"></text></g><g><title>burst`core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="8.3014%" y="197" width="0.1277%" height="15" fill="rgb(235,61,29)" fg:x="65" fg:w="1"/><text x="8.5514%" y="207.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="8.6845%" y="165" width="0.1277%" height="15" fill="rgb(219,207,3)" fg:x="68" fg:w="1"/><text x="8.9345%" y="175.50"></text></g><g><title>burst`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="8.6845%" y="149" width="0.1277%" height="15" fill="rgb(222,56,46)" fg:x="68" fg:w="1"/><text x="8.9345%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.13%)</title><rect x="8.6845%" y="133" width="0.1277%" height="15" fill="rgb(239,76,54)" fg:x="68" fg:w="1"/><text x="8.9345%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.13%)</title><rect x="8.6845%" y="117" width="0.1277%" height="15" fill="rgb(231,124,27)" fg:x="68" fg:w="1"/><text x="8.9345%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.13%)</title><rect x="8.6845%" y="101" width="0.1277%" height="15" fill="rgb(249,195,6)" fg:x="68" fg:w="1"/><text x="8.9345%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (1 samples, 0.13%)</title><rect x="8.8123%" y="117" width="0.1277%" height="15" fill="rgb(237,174,47)" fg:x="69" fg:w="1"/><text x="9.0623%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.13%)</title><rect x="8.9400%" y="85" width="0.1277%" height="15" fill="rgb(206,201,31)" fg:x="70" fg:w="1"/><text x="9.1900%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.13%)</title><rect x="8.9400%" y="69" width="0.1277%" height="15" fill="rgb(231,57,52)" fg:x="70" fg:w="1"/><text x="9.1900%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.13%)</title><rect x="8.9400%" y="53" width="0.1277%" height="15" fill="rgb(248,177,22)" fg:x="70" fg:w="1"/><text x="9.1900%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (1 samples, 0.13%)</title><rect x="8.9400%" y="37" width="0.1277%" height="15" fill="rgb(215,211,37)" fg:x="70" fg:w="1"/><text x="9.1900%" y="47.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.38%)</title><rect x="8.8123%" y="149" width="0.3831%" height="15" fill="rgb(241,128,51)" fg:x="69" fg:w="3"/><text x="9.0623%" y="159.50"></text></g><g><title>burst`alloc::raw_vec::finish_grow (3 samples, 0.38%)</title><rect x="8.8123%" y="133" width="0.3831%" height="15" fill="rgb(227,165,31)" fg:x="69" fg:w="3"/><text x="9.0623%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.26%)</title><rect x="8.9400%" y="117" width="0.2554%" height="15" fill="rgb(228,167,24)" fg:x="70" fg:w="2"/><text x="9.1900%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.26%)</title><rect x="8.9400%" y="101" width="0.2554%" height="15" fill="rgb(228,143,12)" fg:x="70" fg:w="2"/><text x="9.1900%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.13%)</title><rect x="9.0677%" y="85" width="0.1277%" height="15" fill="rgb(249,149,8)" fg:x="71" fg:w="1"/><text x="9.3177%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.13%)</title><rect x="9.0677%" y="69" width="0.1277%" height="15" fill="rgb(243,35,44)" fg:x="71" fg:w="1"/><text x="9.3177%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.13%)</title><rect x="9.0677%" y="53" width="0.1277%" height="15" fill="rgb(246,89,9)" fg:x="71" fg:w="1"/><text x="9.3177%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.13%)</title><rect x="9.0677%" y="37" width="0.1277%" height="15" fill="rgb(233,213,13)" fg:x="71" fg:w="1"/><text x="9.3177%" y="47.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="9.1954%" y="149" width="0.1277%" height="15" fill="rgb(233,141,41)" fg:x="72" fg:w="1"/><text x="9.4454%" y="159.50"></text></g><g><title>burst`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.13%)</title><rect x="9.1954%" y="133" width="0.1277%" height="15" fill="rgb(239,167,4)" fg:x="72" fg:w="1"/><text x="9.4454%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`vm_copy (1 samples, 0.13%)</title><rect x="9.3231%" y="53" width="0.1277%" height="15" fill="rgb(209,217,16)" fg:x="73" fg:w="1"/><text x="9.5731%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1 samples, 0.13%)</title><rect x="9.3231%" y="37" width="0.1277%" height="15" fill="rgb(219,88,35)" fg:x="73" fg:w="1"/><text x="9.5731%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1 samples, 0.13%)</title><rect x="9.4508%" y="53" width="0.1277%" height="15" fill="rgb(220,193,23)" fg:x="74" fg:w="1"/><text x="9.7008%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.13%)</title><rect x="9.4508%" y="37" width="0.1277%" height="15" fill="rgb(230,90,52)" fg:x="74" fg:w="1"/><text x="9.7008%" y="47.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.51%)</title><rect x="9.3231%" y="133" width="0.5109%" height="15" fill="rgb(252,106,19)" fg:x="73" fg:w="4"/><text x="9.5731%" y="143.50"></text></g><g><title>burst`alloc::raw_vec::finish_grow (4 samples, 0.51%)</title><rect x="9.3231%" y="117" width="0.5109%" height="15" fill="rgb(206,74,20)" fg:x="73" fg:w="4"/><text x="9.5731%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (4 samples, 0.51%)</title><rect x="9.3231%" y="101" width="0.5109%" height="15" fill="rgb(230,138,44)" fg:x="73" fg:w="4"/><text x="9.5731%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (4 samples, 0.51%)</title><rect x="9.3231%" y="85" width="0.5109%" height="15" fill="rgb(235,182,43)" fg:x="73" fg:w="4"/><text x="9.5731%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (4 samples, 0.51%)</title><rect x="9.3231%" y="69" width="0.5109%" height="15" fill="rgb(242,16,51)" fg:x="73" fg:w="4"/><text x="9.5731%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.26%)</title><rect x="9.5785%" y="53" width="0.2554%" height="15" fill="rgb(248,9,4)" fg:x="75" fg:w="2"/><text x="9.8285%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (2 samples, 0.26%)</title><rect x="9.5785%" y="37" width="0.2554%" height="15" fill="rgb(210,31,22)" fg:x="75" fg:w="2"/><text x="9.8285%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.64%)</title><rect x="9.8340%" y="37" width="0.6386%" height="15" fill="rgb(239,54,39)" fg:x="77" fg:w="5"/><text x="10.0840%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 1.92%)</title><rect x="9.8340%" y="85" width="1.9157%" height="15" fill="rgb(230,99,41)" fg:x="77" fg:w="15"/><text x="10.0840%" y="95.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 1.92%)</title><rect x="9.8340%" y="69" width="1.9157%" height="15" fill="rgb(253,106,12)" fg:x="77" fg:w="15"/><text x="10.0840%" y="79.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (15 samples, 1.92%)</title><rect x="9.8340%" y="53" width="1.9157%" height="15" fill="rgb(213,46,41)" fg:x="77" fg:w="15"/><text x="10.0840%" y="63.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (10 samples, 1.28%)</title><rect x="10.4725%" y="37" width="1.2771%" height="15" fill="rgb(215,133,35)" fg:x="82" fg:w="10"/><text x="10.7225%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.13%)</title><rect x="11.7497%" y="37" width="0.1277%" height="15" fill="rgb(213,28,5)" fg:x="92" fg:w="1"/><text x="11.9997%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.13%)</title><rect x="11.8774%" y="37" width="0.1277%" height="15" fill="rgb(215,77,49)" fg:x="93" fg:w="1"/><text x="12.1274%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.13%)</title><rect x="12.0051%" y="37" width="0.1277%" height="15" fill="rgb(248,100,22)" fg:x="94" fg:w="1"/><text x="12.2551%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (4 samples, 0.51%)</title><rect x="11.7497%" y="53" width="0.5109%" height="15" fill="rgb(208,67,9)" fg:x="92" fg:w="4"/><text x="11.9997%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.13%)</title><rect x="12.1328%" y="37" width="0.1277%" height="15" fill="rgb(219,133,21)" fg:x="95" fg:w="1"/><text x="12.3828%" y="47.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 2.55%)</title><rect x="9.8340%" y="117" width="2.5543%" height="15" fill="rgb(246,46,29)" fg:x="77" fg:w="20"/><text x="10.0840%" y="127.50">bu..</text></g><g><title>burst`alloc::raw_vec::finish_grow (20 samples, 2.55%)</title><rect x="9.8340%" y="101" width="2.5543%" height="15" fill="rgb(246,185,52)" fg:x="77" fg:w="20"/><text x="10.0840%" y="111.50">bu..</text></g><g><title>libsystem_malloc.dylib`realloc (5 samples, 0.64%)</title><rect x="11.7497%" y="85" width="0.6386%" height="15" fill="rgb(252,136,11)" fg:x="92" fg:w="5"/><text x="11.9997%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (5 samples, 0.64%)</title><rect x="11.7497%" y="69" width="0.6386%" height="15" fill="rgb(219,138,53)" fg:x="92" fg:w="5"/><text x="11.9997%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.13%)</title><rect x="12.2605%" y="53" width="0.1277%" height="15" fill="rgb(211,51,23)" fg:x="96" fg:w="1"/><text x="12.5105%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (1 samples, 0.13%)</title><rect x="12.2605%" y="37" width="0.1277%" height="15" fill="rgb(247,221,28)" fg:x="96" fg:w="1"/><text x="12.5105%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.51%)</title><rect x="12.3883%" y="37" width="0.5109%" height="15" fill="rgb(251,222,45)" fg:x="97" fg:w="4"/><text x="12.6383%" y="47.50"></text></g><g><title>burst`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 2.17%)</title><rect x="12.3883%" y="101" width="2.1711%" height="15" fill="rgb(217,162,53)" fg:x="97" fg:w="17"/><text x="12.6383%" y="111.50">b..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 2.17%)</title><rect x="12.3883%" y="85" width="2.1711%" height="15" fill="rgb(229,93,14)" fg:x="97" fg:w="17"/><text x="12.6383%" y="95.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 2.17%)</title><rect x="12.3883%" y="69" width="2.1711%" height="15" fill="rgb(209,67,49)" fg:x="97" fg:w="17"/><text x="12.6383%" y="79.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (17 samples, 2.17%)</title><rect x="12.3883%" y="53" width="2.1711%" height="15" fill="rgb(213,87,29)" fg:x="97" fg:w="17"/><text x="12.6383%" y="63.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (13 samples, 1.66%)</title><rect x="12.8991%" y="37" width="1.6603%" height="15" fill="rgb(205,151,52)" fg:x="101" fg:w="13"/><text x="13.1491%" y="47.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (18 samples, 2.30%)</title><rect x="12.3883%" y="117" width="2.2989%" height="15" fill="rgb(253,215,39)" fg:x="97" fg:w="18"/><text x="12.6383%" y="127.50">b..</text></g><g><title>burst`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.13%)</title><rect x="14.5594%" y="101" width="0.1277%" height="15" fill="rgb(221,220,41)" fg:x="114" fg:w="1"/><text x="14.8094%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (24 samples, 3.07%)</title><rect x="14.6871%" y="37" width="3.0651%" height="15" fill="rgb(218,133,21)" fg:x="115" fg:w="24"/><text x="14.9371%" y="47.50">lib..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (29 samples, 3.70%)</title><rect x="14.6871%" y="69" width="3.7037%" height="15" fill="rgb(221,193,43)" fg:x="115" fg:w="29"/><text x="14.9371%" y="79.50">libs..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (29 samples, 3.70%)</title><rect x="14.6871%" y="53" width="3.7037%" height="15" fill="rgb(240,128,52)" fg:x="115" fg:w="29"/><text x="14.9371%" y="63.50">libs..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.64%)</title><rect x="17.7522%" y="37" width="0.6386%" height="15" fill="rgb(253,114,12)" fg:x="139" fg:w="5"/><text x="18.0022%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.13%)</title><rect x="18.3908%" y="37" width="0.1277%" height="15" fill="rgb(215,223,47)" fg:x="144" fg:w="1"/><text x="18.6408%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.13%)</title><rect x="18.5185%" y="37" width="0.1277%" height="15" fill="rgb(248,225,23)" fg:x="145" fg:w="1"/><text x="18.7685%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (1 samples, 0.13%)</title><rect x="18.6462%" y="37" width="0.1277%" height="15" fill="rgb(250,108,0)" fg:x="146" fg:w="1"/><text x="18.8962%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (7 samples, 0.89%)</title><rect x="18.3908%" y="53" width="0.8940%" height="15" fill="rgb(228,208,7)" fg:x="144" fg:w="7"/><text x="18.6408%" y="63.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.51%)</title><rect x="18.7739%" y="37" width="0.5109%" height="15" fill="rgb(244,45,10)" fg:x="147" fg:w="4"/><text x="19.0239%" y="47.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (37 samples, 4.73%)</title><rect x="14.6871%" y="101" width="4.7254%" height="15" fill="rgb(207,125,25)" fg:x="115" fg:w="37"/><text x="14.9371%" y="111.50">burst`..</text></g><g><title>burst`alloc::raw_vec::finish_grow (37 samples, 4.73%)</title><rect x="14.6871%" y="85" width="4.7254%" height="15" fill="rgb(210,195,18)" fg:x="115" fg:w="37"/><text x="14.9371%" y="95.50">burst`..</text></g><g><title>libsystem_malloc.dylib`realloc (8 samples, 1.02%)</title><rect x="18.3908%" y="69" width="1.0217%" height="15" fill="rgb(249,80,12)" fg:x="144" fg:w="8"/><text x="18.6408%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (1 samples, 0.13%)</title><rect x="19.2848%" y="53" width="0.1277%" height="15" fill="rgb(221,65,9)" fg:x="151" fg:w="1"/><text x="19.5348%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (1 samples, 0.13%)</title><rect x="19.2848%" y="37" width="0.1277%" height="15" fill="rgb(235,49,36)" fg:x="151" fg:w="1"/><text x="19.5348%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (17 samples, 2.17%)</title><rect x="19.4125%" y="37" width="2.1711%" height="15" fill="rgb(225,32,20)" fg:x="152" fg:w="17"/><text x="19.6625%" y="47.50">l..</text></g><g><title>burst`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 2.55%)</title><rect x="19.4125%" y="85" width="2.5543%" height="15" fill="rgb(215,141,46)" fg:x="152" fg:w="20"/><text x="19.6625%" y="95.50">bu..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20 samples, 2.55%)</title><rect x="19.4125%" y="69" width="2.5543%" height="15" fill="rgb(250,160,47)" fg:x="152" fg:w="20"/><text x="19.6625%" y="79.50">li..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (20 samples, 2.55%)</title><rect x="19.4125%" y="53" width="2.5543%" height="15" fill="rgb(216,222,40)" fg:x="152" fg:w="20"/><text x="19.6625%" y="63.50">li..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.38%)</title><rect x="21.5837%" y="37" width="0.3831%" height="15" fill="rgb(234,217,39)" fg:x="169" fg:w="3"/><text x="21.8337%" y="47.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (23 samples, 2.94%)</title><rect x="19.4125%" y="101" width="2.9374%" height="15" fill="rgb(207,178,40)" fg:x="152" fg:w="23"/><text x="19.6625%" y="111.50">bu..</text></g><g><title>burst`core::slice::sort::recurse (3 samples, 0.38%)</title><rect x="21.9668%" y="85" width="0.3831%" height="15" fill="rgb(221,136,13)" fg:x="172" fg:w="3"/><text x="22.2168%" y="95.50"></text></g><g><title>burst`core::slice::sort::recurse (3 samples, 0.38%)</title><rect x="21.9668%" y="69" width="0.3831%" height="15" fill="rgb(249,199,10)" fg:x="172" fg:w="3"/><text x="22.2168%" y="79.50"></text></g><g><title>burst`core::slice::sort::recurse (3 samples, 0.38%)</title><rect x="21.9668%" y="53" width="0.3831%" height="15" fill="rgb(249,222,13)" fg:x="172" fg:w="3"/><text x="22.2168%" y="63.50"></text></g><g><title>burst`core::slice::sort::shift_tail (3 samples, 0.38%)</title><rect x="21.9668%" y="37" width="0.3831%" height="15" fill="rgb(244,185,38)" fg:x="172" fg:w="3"/><text x="22.2168%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.51%)</title><rect x="22.3499%" y="37" width="0.5109%" height="15" fill="rgb(236,202,9)" fg:x="175" fg:w="4"/><text x="22.5999%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 1.15%)</title><rect x="22.3499%" y="53" width="1.1494%" height="15" fill="rgb(250,229,37)" fg:x="175" fg:w="9"/><text x="22.5999%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.64%)</title><rect x="22.8608%" y="37" width="0.6386%" height="15" fill="rgb(206,174,23)" fg:x="179" fg:w="5"/><text x="23.1108%" y="47.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 1.28%)</title><rect x="22.3499%" y="85" width="1.2771%" height="15" fill="rgb(211,33,43)" fg:x="175" fg:w="10"/><text x="22.5999%" y="95.50"></text></g><g><title>burst`alloc::raw_vec::finish_grow (10 samples, 1.28%)</title><rect x="22.3499%" y="69" width="1.2771%" height="15" fill="rgb(245,58,50)" fg:x="175" fg:w="10"/><text x="22.5999%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.13%)</title><rect x="23.4994%" y="53" width="0.1277%" height="15" fill="rgb(244,68,36)" fg:x="184" fg:w="1"/><text x="23.7494%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (1 samples, 0.13%)</title><rect x="23.4994%" y="37" width="0.1277%" height="15" fill="rgb(232,229,15)" fg:x="184" fg:w="1"/><text x="23.7494%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.38%)</title><rect x="23.6271%" y="37" width="0.3831%" height="15" fill="rgb(254,30,23)" fg:x="185" fg:w="3"/><text x="23.8771%" y="47.50"></text></g><g><title>burst`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.89%)</title><rect x="23.6271%" y="69" width="0.8940%" height="15" fill="rgb(235,160,14)" fg:x="185" fg:w="7"/><text x="23.8771%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.89%)</title><rect x="23.6271%" y="53" width="0.8940%" height="15" fill="rgb(212,155,44)" fg:x="185" fg:w="7"/><text x="23.8771%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.51%)</title><rect x="24.0102%" y="37" width="0.5109%" height="15" fill="rgb(226,2,50)" fg:x="188" fg:w="4"/><text x="24.2602%" y="47.50"></text></g><g><title>burst`core::slice::sort::recurse (5 samples, 0.64%)</title><rect x="24.6488%" y="37" width="0.6386%" height="15" fill="rgb(234,177,6)" fg:x="193" fg:w="5"/><text x="24.8988%" y="47.50"></text></g><g><title>burst`core::slice::sort::recurse (23 samples, 2.94%)</title><rect x="24.5211%" y="69" width="2.9374%" height="15" fill="rgb(217,24,9)" fg:x="192" fg:w="23"/><text x="24.7711%" y="79.50">bu..</text></g><g><title>burst`core::slice::sort::recurse (23 samples, 2.94%)</title><rect x="24.5211%" y="53" width="2.9374%" height="15" fill="rgb(220,13,46)" fg:x="192" fg:w="23"/><text x="24.7711%" y="63.50">bu..</text></g><g><title>burst`core::slice::sort::shift_tail (17 samples, 2.17%)</title><rect x="25.2874%" y="37" width="2.1711%" height="15" fill="rgb(239,221,27)" fg:x="198" fg:w="17"/><text x="25.5374%" y="47.50">b..</text></g><g><title>burst`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (57 samples, 7.28%)</title><rect x="27.4585%" y="37" width="7.2797%" height="15" fill="rgb(222,198,25)" fg:x="215" fg:w="57"/><text x="27.7085%" y="47.50">burst`&lt;std..</text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (96 samples, 12.26%)</title><rect x="23.6271%" y="85" width="12.2605%" height="15" fill="rgb(211,99,13)" fg:x="185" fg:w="96"/><text x="23.8771%" y="95.50">burst`burst::ntfa:..</text></g><g><title>burst`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (66 samples, 8.43%)</title><rect x="27.4585%" y="69" width="8.4291%" height="15" fill="rgb(232,111,31)" fg:x="215" fg:w="66"/><text x="27.7085%" y="79.50">burst`hashbr..</text></g><g><title>burst`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (66 samples, 8.43%)</title><rect x="27.4585%" y="53" width="8.4291%" height="15" fill="rgb(245,82,37)" fg:x="215" fg:w="66"/><text x="27.7085%" y="63.50">burst`hashbr..</text></g><g><title>burst`hashbrown::map::make_hash (9 samples, 1.15%)</title><rect x="34.7382%" y="37" width="1.1494%" height="15" fill="rgb(227,149,46)" fg:x="272" fg:w="9"/><text x="34.9882%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 2.04%)</title><rect x="35.8876%" y="37" width="2.0434%" height="15" fill="rgb(218,36,50)" fg:x="281" fg:w="16"/><text x="36.1376%" y="47.50">l..</text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 2.55%)</title><rect x="35.8876%" y="69" width="2.5543%" height="15" fill="rgb(226,80,48)" fg:x="281" fg:w="20"/><text x="36.1376%" y="79.50">bu..</text></g><g><title>burst`alloc::raw_vec::finish_grow (20 samples, 2.55%)</title><rect x="35.8876%" y="53" width="2.5543%" height="15" fill="rgb(238,224,15)" fg:x="281" fg:w="20"/><text x="36.1376%" y="63.50">bu..</text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.51%)</title><rect x="37.9310%" y="37" width="0.5109%" height="15" fill="rgb(241,136,10)" fg:x="297" fg:w="4"/><text x="38.1810%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 1.02%)</title><rect x="38.4419%" y="37" width="1.0217%" height="15" fill="rgb(208,32,45)" fg:x="301" fg:w="8"/><text x="38.6919%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.38%)</title><rect x="39.4636%" y="37" width="0.3831%" height="15" fill="rgb(207,135,9)" fg:x="309" fg:w="3"/><text x="39.7136%" y="47.50"></text></g><g><title>burst`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 1.53%)</title><rect x="38.4419%" y="53" width="1.5326%" height="15" fill="rgb(206,86,44)" fg:x="301" fg:w="12"/><text x="38.6919%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.13%)</title><rect x="39.8467%" y="37" width="0.1277%" height="15" fill="rgb(245,177,15)" fg:x="312" fg:w="1"/><text x="40.0967%" y="47.50"></text></g><g><title>burst`core::slice::sort::partial_insertion_sort (1 samples, 0.13%)</title><rect x="39.9745%" y="37" width="0.1277%" height="15" fill="rgb(206,64,50)" fg:x="313" fg:w="1"/><text x="40.2245%" y="47.50"></text></g><g><title>burst`core::slice::sort::recurse (14 samples, 1.79%)</title><rect x="40.1022%" y="37" width="1.7880%" height="15" fill="rgb(234,36,40)" fg:x="314" fg:w="14"/><text x="40.3522%" y="47.50">b..</text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (47 samples, 6.00%)</title><rect x="38.4419%" y="69" width="6.0026%" height="15" fill="rgb(213,64,8)" fg:x="301" fg:w="47"/><text x="38.6919%" y="79.50">burst`bu..</text></g><g><title>burst`core::slice::sort::recurse (35 samples, 4.47%)</title><rect x="39.9745%" y="53" width="4.4700%" height="15" fill="rgb(210,75,36)" fg:x="313" fg:w="35"/><text x="40.2245%" y="63.50">burst..</text></g><g><title>burst`core::slice::sort::shift_tail (20 samples, 2.55%)</title><rect x="41.8902%" y="37" width="2.5543%" height="15" fill="rgb(229,88,21)" fg:x="328" fg:w="20"/><text x="42.1402%" y="47.50">bu..</text></g><g><title>burst`__rdl_alloc (2 samples, 0.26%)</title><rect x="44.5722%" y="37" width="0.2554%" height="15" fill="rgb(252,204,47)" fg:x="349" fg:w="2"/><text x="44.8222%" y="47.50"></text></g><g><title>burst`__rdl_realloc (1 samples, 0.13%)</title><rect x="44.8276%" y="37" width="0.1277%" height="15" fill="rgb(208,77,27)" fg:x="351" fg:w="1"/><text x="45.0776%" y="47.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 1.15%)</title><rect x="44.5722%" y="53" width="1.1494%" height="15" fill="rgb(221,76,26)" fg:x="349" fg:w="9"/><text x="44.8222%" y="63.50"></text></g><g><title>burst`alloc::raw_vec::finish_grow (6 samples, 0.77%)</title><rect x="44.9553%" y="37" width="0.7663%" height="15" fill="rgb(225,139,18)" fg:x="352" fg:w="6"/><text x="45.2053%" y="47.50"></text></g><g><title>burst`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 1.92%)</title><rect x="45.7216%" y="37" width="1.9157%" height="15" fill="rgb(230,137,11)" fg:x="358" fg:w="15"/><text x="45.9716%" y="47.50">b..</text></g><g><title>burst`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (45 samples, 5.75%)</title><rect x="47.6373%" y="37" width="5.7471%" height="15" fill="rgb(212,28,1)" fg:x="373" fg:w="45"/><text x="47.8873%" y="47.50">burst`&lt;..</text></g><g><title>burst`DYLD-STUB$$malloc (1 samples, 0.13%)</title><rect x="53.3844%" y="37" width="0.1277%" height="15" fill="rgb(248,164,17)" fg:x="418" fg:w="1"/><text x="53.6344%" y="47.50"></text></g><g><title>burst`__rdl_alloc (3 samples, 0.38%)</title><rect x="53.5121%" y="37" width="0.3831%" height="15" fill="rgb(222,171,42)" fg:x="419" fg:w="3"/><text x="53.7621%" y="47.50"></text></g><g><title>burst`core::slice::sort::recurse (31 samples, 3.96%)</title><rect x="53.8953%" y="37" width="3.9591%" height="15" fill="rgb(243,84,45)" fg:x="422" fg:w="31"/><text x="54.1453%" y="47.50">burs..</text></g><g><title>burst`core::slice::sort::shift_tail (12 samples, 1.53%)</title><rect x="57.8544%" y="37" width="1.5326%" height="15" fill="rgb(252,49,23)" fg:x="453" fg:w="12"/><text x="58.1044%" y="47.50"></text></g><g><title>burst`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (6 samples, 0.77%)</title><rect x="59.3870%" y="37" width="0.7663%" height="15" fill="rgb(215,19,7)" fg:x="465" fg:w="6"/><text x="59.6370%" y="47.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (120 samples, 15.33%)</title><rect x="45.7216%" y="53" width="15.3257%" height="15" fill="rgb(238,81,41)" fg:x="358" fg:w="120"/><text x="45.9716%" y="63.50">burst`burst::ntfa::NTFA..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.89%)</title><rect x="60.1533%" y="37" width="0.8940%" height="15" fill="rgb(210,199,37)" fg:x="471" fg:w="7"/><text x="60.4033%" y="47.50"></text></g><g><title>burst`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="61.0473%" y="37" width="0.1277%" height="15" fill="rgb(244,192,49)" fg:x="478" fg:w="1"/><text x="61.2973%" y="47.50"></text></g><g><title>burst`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (32 samples, 4.09%)</title><rect x="61.1750%" y="37" width="4.0868%" height="15" fill="rgb(226,211,11)" fg:x="479" fg:w="32"/><text x="61.4250%" y="47.50">burs..</text></g><g><title>burst`DYLD-STUB$$memcmp (2 samples, 0.26%)</title><rect x="65.2618%" y="37" width="0.2554%" height="15" fill="rgb(236,162,54)" fg:x="511" fg:w="2"/><text x="65.5118%" y="47.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (19 samples, 2.43%)</title><rect x="65.5172%" y="37" width="2.4266%" height="15" fill="rgb(220,229,9)" fg:x="513" fg:w="19"/><text x="65.7672%" y="47.50">bu..</text></g><g><title>burst`alloc::raw_vec::finish_grow (2 samples, 0.26%)</title><rect x="67.9438%" y="37" width="0.2554%" height="15" fill="rgb(250,87,22)" fg:x="532" fg:w="2"/><text x="68.1938%" y="47.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (15 samples, 1.92%)</title><rect x="68.1992%" y="37" width="1.9157%" height="15" fill="rgb(239,43,17)" fg:x="534" fg:w="15"/><text x="68.4492%" y="47.50">b..</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (102 samples, 13.03%)</title><rect x="70.1149%" y="37" width="13.0268%" height="15" fill="rgb(231,177,25)" fg:x="549" fg:w="102"/><text x="70.3649%" y="47.50">burst`burst::ntfa::N..</text></g><g><title>burst`core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="83.1418%" y="37" width="0.1277%" height="15" fill="rgb(219,179,1)" fg:x="651" fg:w="1"/><text x="83.3918%" y="47.50"></text></g><g><title>burst`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.13%)</title><rect x="83.2695%" y="37" width="0.1277%" height="15" fill="rgb(238,219,53)" fg:x="652" fg:w="1"/><text x="83.5195%" y="47.50"></text></g><g><title>burst`hashbrown::map::make_hash (47 samples, 6.00%)</title><rect x="83.3972%" y="37" width="6.0026%" height="15" fill="rgb(232,167,36)" fg:x="653" fg:w="47"/><text x="83.6472%" y="47.50">burst`ha..</text></g><g><title>burst`hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1 samples, 0.13%)</title><rect x="89.3997%" y="37" width="0.1277%" height="15" fill="rgb(244,19,51)" fg:x="700" fg:w="1"/><text x="89.6497%" y="47.50"></text></g><g><title>burst`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.38%)</title><rect x="89.5275%" y="37" width="0.3831%" height="15" fill="rgb(224,6,22)" fg:x="701" fg:w="3"/><text x="89.7775%" y="47.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (365 samples, 46.62%)</title><rect x="44.4444%" y="69" width="46.6156%" height="15" fill="rgb(224,145,5)" fg:x="348" fg:w="365"/><text x="44.6944%" y="79.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (235 samples, 30.01%)</title><rect x="61.0473%" y="53" width="30.0128%" height="15" fill="rgb(234,130,49)" fg:x="478" fg:w="235"/><text x="61.2973%" y="63.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (9 samples, 1.15%)</title><rect x="89.9106%" y="37" width="1.1494%" height="15" fill="rgb(254,6,2)" fg:x="704" fg:w="9"/><text x="90.1606%" y="47.50"></text></g><g><title>burst`hashbrown::map::make_hash (3 samples, 0.38%)</title><rect x="91.0600%" y="37" width="0.3831%" height="15" fill="rgb(208,96,46)" fg:x="713" fg:w="3"/><text x="91.3100%" y="47.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (438 samples, 55.94%)</title><rect x="35.8876%" y="85" width="55.9387%" height="15" fill="rgb(239,3,39)" fg:x="281" fg:w="438"/><text x="36.1376%" y="95.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.77%)</title><rect x="91.0600%" y="69" width="0.7663%" height="15" fill="rgb(233,210,1)" fg:x="713" fg:w="6"/><text x="91.3100%" y="79.50"></text></g><g><title>burst`hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.77%)</title><rect x="91.0600%" y="53" width="0.7663%" height="15" fill="rgb(244,137,37)" fg:x="713" fg:w="6"/><text x="91.3100%" y="63.50"></text></g><g><title>burst`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.38%)</title><rect x="91.4432%" y="37" width="0.3831%" height="15" fill="rgb(240,136,2)" fg:x="716" fg:w="3"/><text x="91.6932%" y="47.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (656 samples, 83.78%)</title><rect x="8.1737%" y="245" width="83.7803%" height="15" fill="rgb(239,18,37)" fg:x="64" fg:w="656"/><text x="8.4237%" y="255.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (655 samples, 83.65%)</title><rect x="8.3014%" y="229" width="83.6526%" height="15" fill="rgb(218,185,22)" fg:x="65" fg:w="655"/><text x="8.5514%" y="239.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (654 samples, 83.52%)</title><rect x="8.4291%" y="213" width="83.5249%" height="15" fill="rgb(225,218,4)" fg:x="66" fg:w="654"/><text x="8.6791%" y="223.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (653 samples, 83.40%)</title><rect x="8.5568%" y="197" width="83.3972%" height="15" fill="rgb(230,182,32)" fg:x="67" fg:w="653"/><text x="8.8068%" y="207.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (652 samples, 83.27%)</title><rect x="8.6845%" y="181" width="83.2695%" height="15" fill="rgb(242,56,43)" fg:x="68" fg:w="652"/><text x="8.9345%" y="191.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (651 samples, 83.14%)</title><rect x="8.8123%" y="165" width="83.1418%" height="15" fill="rgb(233,99,24)" fg:x="69" fg:w="651"/><text x="9.0623%" y="175.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (647 samples, 82.63%)</title><rect x="9.3231%" y="149" width="82.6309%" height="15" fill="rgb(234,209,42)" fg:x="73" fg:w="647"/><text x="9.5731%" y="159.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (643 samples, 82.12%)</title><rect x="9.8340%" y="133" width="82.1201%" height="15" fill="rgb(227,7,12)" fg:x="77" fg:w="643"/><text x="10.0840%" y="143.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (605 samples, 77.27%)</title><rect x="14.6871%" y="117" width="77.2669%" height="15" fill="rgb(245,203,43)" fg:x="115" fg:w="605"/><text x="14.9371%" y="127.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (545 samples, 69.60%)</title><rect x="22.3499%" y="101" width="69.6041%" height="15" fill="rgb(238,205,33)" fg:x="175" fg:w="545"/><text x="22.5999%" y="111.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.13%)</title><rect x="91.8263%" y="85" width="0.1277%" height="15" fill="rgb(231,56,7)" fg:x="719" fg:w="1"/><text x="92.0763%" y="95.50"></text></g><g><title>burst`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.13%)</title><rect x="91.8263%" y="69" width="0.1277%" height="15" fill="rgb(244,186,29)" fg:x="719" fg:w="1"/><text x="92.0763%" y="79.50"></text></g><g><title>burst`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.13%)</title><rect x="91.8263%" y="53" width="0.1277%" height="15" fill="rgb(234,111,31)" fg:x="719" fg:w="1"/><text x="92.0763%" y="63.50"></text></g><g><title>burst`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="91.8263%" y="37" width="0.1277%" height="15" fill="rgb(241,149,10)" fg:x="719" fg:w="1"/><text x="92.0763%" y="47.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (660 samples, 84.29%)</title><rect x="7.7905%" y="357" width="84.2912%" height="15" fill="rgb(249,206,44)" fg:x="61" fg:w="660"/><text x="8.0405%" y="367.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (660 samples, 84.29%)</title><rect x="7.7905%" y="341" width="84.2912%" height="15" fill="rgb(251,153,30)" fg:x="61" fg:w="660"/><text x="8.0405%" y="351.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (660 samples, 84.29%)</title><rect x="7.7905%" y="325" width="84.2912%" height="15" fill="rgb(239,152,38)" fg:x="61" fg:w="660"/><text x="8.0405%" y="335.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (660 samples, 84.29%)</title><rect x="7.7905%" y="309" width="84.2912%" height="15" fill="rgb(249,139,47)" fg:x="61" fg:w="660"/><text x="8.0405%" y="319.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (660 samples, 84.29%)</title><rect x="7.7905%" y="293" width="84.2912%" height="15" fill="rgb(244,64,35)" fg:x="61" fg:w="660"/><text x="8.0405%" y="303.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (659 samples, 84.16%)</title><rect x="7.9183%" y="277" width="84.1635%" height="15" fill="rgb(216,46,15)" fg:x="62" fg:w="659"/><text x="8.1683%" y="287.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (658 samples, 84.04%)</title><rect x="8.0460%" y="261" width="84.0358%" height="15" fill="rgb(250,74,19)" fg:x="63" fg:w="658"/><text x="8.2960%" y="271.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`hashbrown::map::make_hash (1 samples, 0.13%)</title><rect x="91.9540%" y="245" width="0.1277%" height="15" fill="rgb(249,42,33)" fg:x="720" fg:w="1"/><text x="92.2040%" y="255.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (661 samples, 84.42%)</title><rect x="7.7905%" y="405" width="84.4189%" height="15" fill="rgb(242,149,17)" fg:x="61" fg:w="661"/><text x="8.0405%" y="415.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (661 samples, 84.42%)</title><rect x="7.7905%" y="389" width="84.4189%" height="15" fill="rgb(244,29,21)" fg:x="61" fg:w="661"/><text x="8.0405%" y="399.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (661 samples, 84.42%)</title><rect x="7.7905%" y="373" width="84.4189%" height="15" fill="rgb(220,130,37)" fg:x="61" fg:w="661"/><text x="8.0405%" y="383.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.13%)</title><rect x="92.0817%" y="357" width="0.1277%" height="15" fill="rgb(211,67,2)" fg:x="721" fg:w="1"/><text x="92.3317%" y="367.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (682 samples, 87.10%)</title><rect x="5.2363%" y="805" width="87.1009%" height="15" fill="rgb(235,68,52)" fg:x="41" fg:w="682"/><text x="5.4863%" y="815.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (681 samples, 86.97%)</title><rect x="5.3640%" y="789" width="86.9732%" height="15" fill="rgb(246,142,3)" fg:x="42" fg:w="681"/><text x="5.6140%" y="799.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (681 samples, 86.97%)</title><rect x="5.3640%" y="773" width="86.9732%" height="15" fill="rgb(241,25,7)" fg:x="42" fg:w="681"/><text x="5.6140%" y="783.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (679 samples, 86.72%)</title><rect x="5.6194%" y="757" width="86.7178%" height="15" fill="rgb(242,119,39)" fg:x="44" fg:w="679"/><text x="5.8694%" y="767.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (679 samples, 86.72%)</title><rect x="5.6194%" y="741" width="86.7178%" height="15" fill="rgb(241,98,45)" fg:x="44" fg:w="679"/><text x="5.8694%" y="751.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (678 samples, 86.59%)</title><rect x="5.7471%" y="725" width="86.5900%" height="15" fill="rgb(254,28,30)" fg:x="45" fg:w="678"/><text x="5.9971%" y="735.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (676 samples, 86.33%)</title><rect x="6.0026%" y="709" width="86.3346%" height="15" fill="rgb(241,142,54)" fg:x="47" fg:w="676"/><text x="6.2526%" y="719.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (675 samples, 86.21%)</title><rect x="6.1303%" y="693" width="86.2069%" height="15" fill="rgb(222,85,15)" fg:x="48" fg:w="675"/><text x="6.3803%" y="703.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (675 samples, 86.21%)</title><rect x="6.1303%" y="677" width="86.2069%" height="15" fill="rgb(210,85,47)" fg:x="48" fg:w="675"/><text x="6.3803%" y="687.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (675 samples, 86.21%)</title><rect x="6.1303%" y="661" width="86.2069%" height="15" fill="rgb(224,206,25)" fg:x="48" fg:w="675"/><text x="6.3803%" y="671.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (674 samples, 86.08%)</title><rect x="6.2580%" y="645" width="86.0792%" height="15" fill="rgb(243,201,19)" fg:x="49" fg:w="674"/><text x="6.5080%" y="655.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (673 samples, 85.95%)</title><rect x="6.3857%" y="629" width="85.9515%" height="15" fill="rgb(236,59,4)" fg:x="50" fg:w="673"/><text x="6.6357%" y="639.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (673 samples, 85.95%)</title><rect x="6.3857%" y="613" width="85.9515%" height="15" fill="rgb(254,179,45)" fg:x="50" fg:w="673"/><text x="6.6357%" y="623.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (672 samples, 85.82%)</title><rect x="6.5134%" y="597" width="85.8238%" height="15" fill="rgb(226,14,10)" fg:x="51" fg:w="672"/><text x="6.7634%" y="607.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (671 samples, 85.70%)</title><rect x="6.6411%" y="581" width="85.6960%" height="15" fill="rgb(244,27,41)" fg:x="52" fg:w="671"/><text x="6.8911%" y="591.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (670 samples, 85.57%)</title><rect x="6.7688%" y="565" width="85.5683%" height="15" fill="rgb(235,35,32)" fg:x="53" fg:w="670"/><text x="7.0188%" y="575.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (670 samples, 85.57%)</title><rect x="6.7688%" y="549" width="85.5683%" height="15" fill="rgb(218,68,31)" fg:x="53" fg:w="670"/><text x="7.0188%" y="559.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (669 samples, 85.44%)</title><rect x="6.8966%" y="533" width="85.4406%" height="15" fill="rgb(207,120,37)" fg:x="54" fg:w="669"/><text x="7.1466%" y="543.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (669 samples, 85.44%)</title><rect x="6.8966%" y="517" width="85.4406%" height="15" fill="rgb(227,98,0)" fg:x="54" fg:w="669"/><text x="7.1466%" y="527.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (668 samples, 85.31%)</title><rect x="7.0243%" y="501" width="85.3129%" height="15" fill="rgb(207,7,3)" fg:x="55" fg:w="668"/><text x="7.2743%" y="511.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (666 samples, 85.06%)</title><rect x="7.2797%" y="485" width="85.0575%" height="15" fill="rgb(206,98,19)" fg:x="57" fg:w="666"/><text x="7.5297%" y="495.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (666 samples, 85.06%)</title><rect x="7.2797%" y="469" width="85.0575%" height="15" fill="rgb(217,5,26)" fg:x="57" fg:w="666"/><text x="7.5297%" y="479.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (664 samples, 84.80%)</title><rect x="7.5351%" y="453" width="84.8020%" height="15" fill="rgb(235,190,38)" fg:x="59" fg:w="664"/><text x="7.7851%" y="463.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (663 samples, 84.67%)</title><rect x="7.6628%" y="437" width="84.6743%" height="15" fill="rgb(247,86,24)" fg:x="60" fg:w="663"/><text x="7.9128%" y="447.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (662 samples, 84.55%)</title><rect x="7.7905%" y="421" width="84.5466%" height="15" fill="rgb(205,101,16)" fg:x="61" fg:w="662"/><text x="8.0405%" y="431.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.13%)</title><rect x="92.2095%" y="405" width="0.1277%" height="15" fill="rgb(246,168,33)" fg:x="722" fg:w="1"/><text x="92.4595%" y="415.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (683 samples, 87.23%)</title><rect x="5.2363%" y="901" width="87.2286%" height="15" fill="rgb(231,114,1)" fg:x="41" fg:w="683"/><text x="5.4863%" y="911.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (683 samples, 87.23%)</title><rect x="5.2363%" y="885" width="87.2286%" height="15" fill="rgb(207,184,53)" fg:x="41" fg:w="683"/><text x="5.4863%" y="895.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (683 samples, 87.23%)</title><rect x="5.2363%" y="869" width="87.2286%" height="15" fill="rgb(224,95,51)" fg:x="41" fg:w="683"/><text x="5.4863%" y="879.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (683 samples, 87.23%)</title><rect x="5.2363%" y="853" width="87.2286%" height="15" fill="rgb(212,188,45)" fg:x="41" fg:w="683"/><text x="5.4863%" y="863.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (683 samples, 87.23%)</title><rect x="5.2363%" y="837" width="87.2286%" height="15" fill="rgb(223,154,38)" fg:x="41" fg:w="683"/><text x="5.4863%" y="847.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (683 samples, 87.23%)</title><rect x="5.2363%" y="821" width="87.2286%" height="15" fill="rgb(251,22,52)" fg:x="41" fg:w="683"/><text x="5.4863%" y="831.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`hashbrown::map::make_hash (1 samples, 0.13%)</title><rect x="92.3372%" y="805" width="0.1277%" height="15" fill="rgb(229,209,22)" fg:x="723" fg:w="1"/><text x="92.5872%" y="815.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (697 samples, 89.02%)</title><rect x="3.5760%" y="1189" width="89.0166%" height="15" fill="rgb(234,138,34)" fg:x="28" fg:w="697"/><text x="3.8260%" y="1199.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (697 samples, 89.02%)</title><rect x="3.5760%" y="1173" width="89.0166%" height="15" fill="rgb(212,95,11)" fg:x="28" fg:w="697"/><text x="3.8260%" y="1183.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (696 samples, 88.89%)</title><rect x="3.7037%" y="1157" width="88.8889%" height="15" fill="rgb(240,179,47)" fg:x="29" fg:w="696"/><text x="3.9537%" y="1167.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (694 samples, 88.63%)</title><rect x="3.9591%" y="1141" width="88.6335%" height="15" fill="rgb(240,163,11)" fg:x="31" fg:w="694"/><text x="4.2091%" y="1151.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (692 samples, 88.38%)</title><rect x="4.2146%" y="1125" width="88.3780%" height="15" fill="rgb(236,37,12)" fg:x="33" fg:w="692"/><text x="4.4646%" y="1135.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (691 samples, 88.25%)</title><rect x="4.3423%" y="1109" width="88.2503%" height="15" fill="rgb(232,164,16)" fg:x="34" fg:w="691"/><text x="4.5923%" y="1119.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (691 samples, 88.25%)</title><rect x="4.3423%" y="1093" width="88.2503%" height="15" fill="rgb(244,205,15)" fg:x="34" fg:w="691"/><text x="4.5923%" y="1103.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (691 samples, 88.25%)</title><rect x="4.3423%" y="1077" width="88.2503%" height="15" fill="rgb(223,117,47)" fg:x="34" fg:w="691"/><text x="4.5923%" y="1087.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (691 samples, 88.25%)</title><rect x="4.3423%" y="1061" width="88.2503%" height="15" fill="rgb(244,107,35)" fg:x="34" fg:w="691"/><text x="4.5923%" y="1071.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (691 samples, 88.25%)</title><rect x="4.3423%" y="1045" width="88.2503%" height="15" fill="rgb(205,140,8)" fg:x="34" fg:w="691"/><text x="4.5923%" y="1055.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (691 samples, 88.25%)</title><rect x="4.3423%" y="1029" width="88.2503%" height="15" fill="rgb(228,84,46)" fg:x="34" fg:w="691"/><text x="4.5923%" y="1039.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (691 samples, 88.25%)</title><rect x="4.3423%" y="1013" width="88.2503%" height="15" fill="rgb(254,188,9)" fg:x="34" fg:w="691"/><text x="4.5923%" y="1023.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (690 samples, 88.12%)</title><rect x="4.4700%" y="997" width="88.1226%" height="15" fill="rgb(206,112,54)" fg:x="35" fg:w="690"/><text x="4.7200%" y="1007.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (687 samples, 87.74%)</title><rect x="4.8531%" y="981" width="87.7395%" height="15" fill="rgb(216,84,49)" fg:x="38" fg:w="687"/><text x="5.1031%" y="991.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (687 samples, 87.74%)</title><rect x="4.8531%" y="965" width="87.7395%" height="15" fill="rgb(214,194,35)" fg:x="38" fg:w="687"/><text x="5.1031%" y="975.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (687 samples, 87.74%)</title><rect x="4.8531%" y="949" width="87.7395%" height="15" fill="rgb(249,28,3)" fg:x="38" fg:w="687"/><text x="5.1031%" y="959.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (686 samples, 87.61%)</title><rect x="4.9808%" y="933" width="87.6117%" height="15" fill="rgb(222,56,52)" fg:x="39" fg:w="686"/><text x="5.2308%" y="943.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (686 samples, 87.61%)</title><rect x="4.9808%" y="917" width="87.6117%" height="15" fill="rgb(245,217,50)" fg:x="39" fg:w="686"/><text x="5.2308%" y="927.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`hashbrown::map::make_hash (1 samples, 0.13%)</title><rect x="92.4649%" y="901" width="0.1277%" height="15" fill="rgb(213,201,24)" fg:x="724" fg:w="1"/><text x="92.7149%" y="911.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (725 samples, 92.59%)</title><rect x="0.1277%" y="1621" width="92.5926%" height="15" fill="rgb(248,116,28)" fg:x="1" fg:w="725"/><text x="0.3777%" y="1631.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (725 samples, 92.59%)</title><rect x="0.1277%" y="1605" width="92.5926%" height="15" fill="rgb(219,72,43)" fg:x="1" fg:w="725"/><text x="0.3777%" y="1615.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (725 samples, 92.59%)</title><rect x="0.1277%" y="1589" width="92.5926%" height="15" fill="rgb(209,138,14)" fg:x="1" fg:w="725"/><text x="0.3777%" y="1599.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (725 samples, 92.59%)</title><rect x="0.1277%" y="1573" width="92.5926%" height="15" fill="rgb(222,18,33)" fg:x="1" fg:w="725"/><text x="0.3777%" y="1583.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (723 samples, 92.34%)</title><rect x="0.3831%" y="1557" width="92.3372%" height="15" fill="rgb(213,199,7)" fg:x="3" fg:w="723"/><text x="0.6331%" y="1567.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (723 samples, 92.34%)</title><rect x="0.3831%" y="1541" width="92.3372%" height="15" fill="rgb(250,110,10)" fg:x="3" fg:w="723"/><text x="0.6331%" y="1551.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (723 samples, 92.34%)</title><rect x="0.3831%" y="1525" width="92.3372%" height="15" fill="rgb(248,123,6)" fg:x="3" fg:w="723"/><text x="0.6331%" y="1535.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (723 samples, 92.34%)</title><rect x="0.3831%" y="1509" width="92.3372%" height="15" fill="rgb(206,91,31)" fg:x="3" fg:w="723"/><text x="0.6331%" y="1519.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (723 samples, 92.34%)</title><rect x="0.3831%" y="1493" width="92.3372%" height="15" fill="rgb(211,154,13)" fg:x="3" fg:w="723"/><text x="0.6331%" y="1503.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (723 samples, 92.34%)</title><rect x="0.3831%" y="1477" width="92.3372%" height="15" fill="rgb(225,148,7)" fg:x="3" fg:w="723"/><text x="0.6331%" y="1487.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (723 samples, 92.34%)</title><rect x="0.3831%" y="1461" width="92.3372%" height="15" fill="rgb(220,160,43)" fg:x="3" fg:w="723"/><text x="0.6331%" y="1471.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (723 samples, 92.34%)</title><rect x="0.3831%" y="1445" width="92.3372%" height="15" fill="rgb(213,52,39)" fg:x="3" fg:w="723"/><text x="0.6331%" y="1455.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (723 samples, 92.34%)</title><rect x="0.3831%" y="1429" width="92.3372%" height="15" fill="rgb(243,137,7)" fg:x="3" fg:w="723"/><text x="0.6331%" y="1439.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (723 samples, 92.34%)</title><rect x="0.3831%" y="1413" width="92.3372%" height="15" fill="rgb(230,79,13)" fg:x="3" fg:w="723"/><text x="0.6331%" y="1423.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (723 samples, 92.34%)</title><rect x="0.3831%" y="1397" width="92.3372%" height="15" fill="rgb(247,105,23)" fg:x="3" fg:w="723"/><text x="0.6331%" y="1407.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (723 samples, 92.34%)</title><rect x="0.3831%" y="1381" width="92.3372%" height="15" fill="rgb(223,179,41)" fg:x="3" fg:w="723"/><text x="0.6331%" y="1391.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (721 samples, 92.08%)</title><rect x="0.6386%" y="1365" width="92.0817%" height="15" fill="rgb(218,9,34)" fg:x="5" fg:w="721"/><text x="0.8886%" y="1375.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (703 samples, 89.78%)</title><rect x="2.9374%" y="1349" width="89.7829%" height="15" fill="rgb(222,106,8)" fg:x="23" fg:w="703"/><text x="3.1874%" y="1359.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (702 samples, 89.66%)</title><rect x="3.0651%" y="1333" width="89.6552%" height="15" fill="rgb(211,220,0)" fg:x="24" fg:w="702"/><text x="3.3151%" y="1343.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (701 samples, 89.53%)</title><rect x="3.1928%" y="1317" width="89.5275%" height="15" fill="rgb(229,52,16)" fg:x="25" fg:w="701"/><text x="3.4428%" y="1327.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (700 samples, 89.40%)</title><rect x="3.3206%" y="1301" width="89.3997%" height="15" fill="rgb(212,155,18)" fg:x="26" fg:w="700"/><text x="3.5706%" y="1311.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (700 samples, 89.40%)</title><rect x="3.3206%" y="1285" width="89.3997%" height="15" fill="rgb(242,21,14)" fg:x="26" fg:w="700"/><text x="3.5706%" y="1295.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (700 samples, 89.40%)</title><rect x="3.3206%" y="1269" width="89.3997%" height="15" fill="rgb(222,19,48)" fg:x="26" fg:w="700"/><text x="3.5706%" y="1279.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (700 samples, 89.40%)</title><rect x="3.3206%" y="1253" width="89.3997%" height="15" fill="rgb(232,45,27)" fg:x="26" fg:w="700"/><text x="3.5706%" y="1263.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (700 samples, 89.40%)</title><rect x="3.3206%" y="1237" width="89.3997%" height="15" fill="rgb(249,103,42)" fg:x="26" fg:w="700"/><text x="3.5706%" y="1247.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (700 samples, 89.40%)</title><rect x="3.3206%" y="1221" width="89.3997%" height="15" fill="rgb(246,81,33)" fg:x="26" fg:w="700"/><text x="3.5706%" y="1231.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (698 samples, 89.14%)</title><rect x="3.5760%" y="1205" width="89.1443%" height="15" fill="rgb(252,33,42)" fg:x="28" fg:w="698"/><text x="3.8260%" y="1215.50">burst`burst::ntfa::NTFABuilder::intersect</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 0.13%)</title><rect x="92.5926%" y="1189" width="0.1277%" height="15" fill="rgb(209,212,41)" fg:x="725" fg:w="1"/><text x="92.8426%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.13%)</title><rect x="92.9757%" y="1445" width="0.1277%" height="15" fill="rgb(207,154,6)" fg:x="728" fg:w="1"/><text x="93.2257%" y="1455.50"></text></g><g><title>burst`&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (5 samples, 0.64%)</title><rect x="92.9757%" y="1493" width="0.6386%" height="15" fill="rgb(223,64,47)" fg:x="728" fg:w="5"/><text x="93.2257%" y="1503.50"></text></g><g><title>burst`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.64%)</title><rect x="92.9757%" y="1477" width="0.6386%" height="15" fill="rgb(211,161,38)" fg:x="728" fg:w="5"/><text x="93.2257%" y="1487.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.64%)</title><rect x="92.9757%" y="1461" width="0.6386%" height="15" fill="rgb(219,138,40)" fg:x="728" fg:w="5"/><text x="93.2257%" y="1471.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.51%)</title><rect x="93.1034%" y="1445" width="0.5109%" height="15" fill="rgb(241,228,46)" fg:x="729" fg:w="4"/><text x="93.3534%" y="1455.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.26%)</title><rect x="93.3589%" y="1429" width="0.2554%" height="15" fill="rgb(223,209,38)" fg:x="731" fg:w="2"/><text x="93.6089%" y="1439.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1 samples, 0.13%)</title><rect x="93.4866%" y="1413" width="0.1277%" height="15" fill="rgb(236,164,45)" fg:x="732" fg:w="1"/><text x="93.7366%" y="1423.50"></text></g><g><title>burst`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="93.6143%" y="1493" width="0.1277%" height="15" fill="rgb(231,15,5)" fg:x="733" fg:w="1"/><text x="93.8643%" y="1503.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.13%)</title><rect x="93.7420%" y="1493" width="0.1277%" height="15" fill="rgb(252,35,15)" fg:x="734" fg:w="1"/><text x="93.9920%" y="1503.50"></text></g><g><title>burst`DYLD-STUB$$realloc (1 samples, 0.13%)</title><rect x="93.7420%" y="1477" width="0.1277%" height="15" fill="rgb(248,181,18)" fg:x="734" fg:w="1"/><text x="93.9920%" y="1487.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::insert_into_placeholder (1 samples, 0.13%)</title><rect x="93.8697%" y="1493" width="0.1277%" height="15" fill="rgb(233,39,42)" fg:x="735" fg:w="1"/><text x="94.1197%" y="1503.50"></text></g><g><title>burst`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.13%)</title><rect x="93.8697%" y="1477" width="0.1277%" height="15" fill="rgb(238,110,33)" fg:x="735" fg:w="1"/><text x="94.1197%" y="1487.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.13%)</title><rect x="93.8697%" y="1461" width="0.1277%" height="15" fill="rgb(233,195,10)" fg:x="735" fg:w="1"/><text x="94.1197%" y="1471.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.13%)</title><rect x="93.8697%" y="1445" width="0.1277%" height="15" fill="rgb(254,105,3)" fg:x="735" fg:w="1"/><text x="94.1197%" y="1455.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.13%)</title><rect x="93.8697%" y="1429" width="0.1277%" height="15" fill="rgb(221,225,9)" fg:x="735" fg:w="1"/><text x="94.1197%" y="1439.50"></text></g><g><title>burst`burst::ntfa::PartialNTFA::add_rule (1 samples, 0.13%)</title><rect x="93.9974%" y="1493" width="0.1277%" height="15" fill="rgb(224,227,45)" fg:x="736" fg:w="1"/><text x="94.2474%" y="1503.50"></text></g><g><title>burst`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.13%)</title><rect x="93.9974%" y="1477" width="0.1277%" height="15" fill="rgb(229,198,43)" fg:x="736" fg:w="1"/><text x="94.2474%" y="1487.50"></text></g><g><title>burst`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.13%)</title><rect x="93.9974%" y="1461" width="0.1277%" height="15" fill="rgb(206,209,35)" fg:x="736" fg:w="1"/><text x="94.2474%" y="1471.50"></text></g><g><title>burst`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.13%)</title><rect x="93.9974%" y="1445" width="0.1277%" height="15" fill="rgb(245,195,53)" fg:x="736" fg:w="1"/><text x="94.2474%" y="1455.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.13%)</title><rect x="95.1469%" y="1461" width="0.1277%" height="15" fill="rgb(240,92,26)" fg:x="745" fg:w="1"/><text x="95.3969%" y="1471.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.13%)</title><rect x="95.1469%" y="1445" width="0.1277%" height="15" fill="rgb(207,40,23)" fg:x="745" fg:w="1"/><text x="95.3969%" y="1455.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.26%)</title><rect x="95.1469%" y="1477" width="0.2554%" height="15" fill="rgb(223,111,35)" fg:x="745" fg:w="2"/><text x="95.3969%" y="1487.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.13%)</title><rect x="95.2746%" y="1461" width="0.1277%" height="15" fill="rgb(229,147,28)" fg:x="746" fg:w="1"/><text x="95.5246%" y="1471.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.13%)</title><rect x="95.2746%" y="1445" width="0.1277%" height="15" fill="rgb(211,29,28)" fg:x="746" fg:w="1"/><text x="95.5246%" y="1455.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.13%)</title><rect x="95.2746%" y="1429" width="0.1277%" height="15" fill="rgb(228,72,33)" fg:x="746" fg:w="1"/><text x="95.5246%" y="1439.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.51%)</title><rect x="95.4023%" y="1477" width="0.5109%" height="15" fill="rgb(205,214,31)" fg:x="747" fg:w="4"/><text x="95.6523%" y="1487.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.13%)</title><rect x="95.7854%" y="1461" width="0.1277%" height="15" fill="rgb(224,111,15)" fg:x="750" fg:w="1"/><text x="96.0354%" y="1471.50"></text></g><g><title>burst`burst::ntfa::dedup_merge (15 samples, 1.92%)</title><rect x="94.1252%" y="1493" width="1.9157%" height="15" fill="rgb(253,21,26)" fg:x="737" fg:w="15"/><text x="94.3752%" y="1503.50">b..</text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1 samples, 0.13%)</title><rect x="95.9132%" y="1477" width="0.1277%" height="15" fill="rgb(245,139,43)" fg:x="751" fg:w="1"/><text x="96.1632%" y="1487.50"></text></g><g><title>burst`core::slice::sort::recurse (1 samples, 0.13%)</title><rect x="96.6794%" y="1477" width="0.1277%" height="15" fill="rgb(252,170,7)" fg:x="757" fg:w="1"/><text x="96.9294%" y="1487.50"></text></g><g><title>burst`core::slice::sort::shift_tail (1 samples, 0.13%)</title><rect x="96.6794%" y="1461" width="0.1277%" height="15" fill="rgb(231,118,14)" fg:x="757" fg:w="1"/><text x="96.9294%" y="1471.50"></text></g><g><title>burst`core::slice::sort::recurse (8 samples, 1.02%)</title><rect x="96.0409%" y="1493" width="1.0217%" height="15" fill="rgb(238,83,0)" fg:x="752" fg:w="8"/><text x="96.2909%" y="1503.50"></text></g><g><title>burst`core::slice::sort::shift_tail (2 samples, 0.26%)</title><rect x="96.8072%" y="1477" width="0.2554%" height="15" fill="rgb(221,39,39)" fg:x="758" fg:w="2"/><text x="97.0572%" y="1487.50"></text></g><g><title>burst`core::slice::sort::shift_tail (2 samples, 0.26%)</title><rect x="97.0626%" y="1493" width="0.2554%" height="15" fill="rgb(222,119,46)" fg:x="760" fg:w="2"/><text x="97.3126%" y="1503.50"></text></g><g><title>burst`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.13%)</title><rect x="97.3180%" y="1493" width="0.1277%" height="15" fill="rgb(222,165,49)" fg:x="762" fg:w="1"/><text x="97.5680%" y="1503.50"></text></g><g><title>burst`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.13%)</title><rect x="97.3180%" y="1477" width="0.1277%" height="15" fill="rgb(219,113,52)" fg:x="762" fg:w="1"/><text x="97.5680%" y="1487.50"></text></g><g><title>burst`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.13%)</title><rect x="97.3180%" y="1461" width="0.1277%" height="15" fill="rgb(214,7,15)" fg:x="762" fg:w="1"/><text x="97.5680%" y="1471.50"></text></g><g><title>burst`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.13%)</title><rect x="97.3180%" y="1445" width="0.1277%" height="15" fill="rgb(235,32,4)" fg:x="762" fg:w="1"/><text x="97.5680%" y="1455.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.89%)</title><rect x="97.4457%" y="1493" width="0.8940%" height="15" fill="rgb(238,90,54)" fg:x="763" fg:w="7"/><text x="97.6957%" y="1503.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.38%)</title><rect x="97.9566%" y="1477" width="0.3831%" height="15" fill="rgb(213,208,19)" fg:x="767" fg:w="3"/><text x="98.2066%" y="1487.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.26%)</title><rect x="98.3397%" y="1493" width="0.2554%" height="15" fill="rgb(233,156,4)" fg:x="770" fg:w="2"/><text x="98.5897%" y="1503.50"></text></g><g><title>burst`burst::nftabuilder::_&lt;impl burst::ntfa::NTFABuilder&gt;::build_ntfa (47 samples, 6.00%)</title><rect x="92.7203%" y="1509" width="6.0026%" height="15" fill="rgb(207,194,5)" fg:x="726" fg:w="47"/><text x="92.9703%" y="1519.50">burst`bu..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.13%)</title><rect x="98.5951%" y="1493" width="0.1277%" height="15" fill="rgb(206,111,30)" fg:x="772" fg:w="1"/><text x="98.8451%" y="1503.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1509" width="0.1277%" height="15" fill="rgb(243,70,54)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1519.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1493" width="0.1277%" height="15" fill="rgb(242,28,8)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1503.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1477" width="0.1277%" height="15" fill="rgb(219,106,18)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1487.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1461" width="0.1277%" height="15" fill="rgb(244,222,10)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1471.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1445" width="0.1277%" height="15" fill="rgb(236,179,52)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1455.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1429" width="0.1277%" height="15" fill="rgb(213,23,39)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1439.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1413" width="0.1277%" height="15" fill="rgb(238,48,10)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1423.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1397" width="0.1277%" height="15" fill="rgb(251,196,23)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1407.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1381" width="0.1277%" height="15" fill="rgb(250,152,24)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1391.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1365" width="0.1277%" height="15" fill="rgb(209,150,17)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1375.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1349" width="0.1277%" height="15" fill="rgb(234,202,34)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1359.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1333" width="0.1277%" height="15" fill="rgb(253,148,53)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1343.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1317" width="0.1277%" height="15" fill="rgb(218,129,16)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1327.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1301" width="0.1277%" height="15" fill="rgb(216,85,19)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1311.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1285" width="0.1277%" height="15" fill="rgb(235,228,7)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1295.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1269" width="0.1277%" height="15" fill="rgb(245,175,0)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1279.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1253" width="0.1277%" height="15" fill="rgb(208,168,36)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1263.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1237" width="0.1277%" height="15" fill="rgb(246,171,24)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1247.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1221" width="0.1277%" height="15" fill="rgb(215,142,24)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1231.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1205" width="0.1277%" height="15" fill="rgb(250,187,7)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1215.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1189" width="0.1277%" height="15" fill="rgb(228,66,33)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1199.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1173" width="0.1277%" height="15" fill="rgb(234,215,21)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1183.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1157" width="0.1277%" height="15" fill="rgb(222,191,20)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1167.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1141" width="0.1277%" height="15" fill="rgb(245,79,54)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1151.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1125" width="0.1277%" height="15" fill="rgb(240,10,37)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1135.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1109" width="0.1277%" height="15" fill="rgb(214,192,32)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1119.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1093" width="0.1277%" height="15" fill="rgb(209,36,54)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1103.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1077" width="0.1277%" height="15" fill="rgb(220,10,11)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1087.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1061" width="0.1277%" height="15" fill="rgb(221,106,17)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1071.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1045" width="0.1277%" height="15" fill="rgb(251,142,44)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1055.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1029" width="0.1277%" height="15" fill="rgb(238,13,15)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1039.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="1013" width="0.1277%" height="15" fill="rgb(208,107,27)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1023.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="997" width="0.1277%" height="15" fill="rgb(205,136,37)" fg:x="773" fg:w="1"/><text x="98.9729%" y="1007.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="981" width="0.1277%" height="15" fill="rgb(250,205,27)" fg:x="773" fg:w="1"/><text x="98.9729%" y="991.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="965" width="0.1277%" height="15" fill="rgb(210,80,43)" fg:x="773" fg:w="1"/><text x="98.9729%" y="975.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="949" width="0.1277%" height="15" fill="rgb(247,160,36)" fg:x="773" fg:w="1"/><text x="98.9729%" y="959.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="933" width="0.1277%" height="15" fill="rgb(234,13,49)" fg:x="773" fg:w="1"/><text x="98.9729%" y="943.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="917" width="0.1277%" height="15" fill="rgb(234,122,0)" fg:x="773" fg:w="1"/><text x="98.9729%" y="927.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="901" width="0.1277%" height="15" fill="rgb(207,146,38)" fg:x="773" fg:w="1"/><text x="98.9729%" y="911.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="885" width="0.1277%" height="15" fill="rgb(207,177,25)" fg:x="773" fg:w="1"/><text x="98.9729%" y="895.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="869" width="0.1277%" height="15" fill="rgb(211,178,42)" fg:x="773" fg:w="1"/><text x="98.9729%" y="879.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="853" width="0.1277%" height="15" fill="rgb(230,69,54)" fg:x="773" fg:w="1"/><text x="98.9729%" y="863.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="837" width="0.1277%" height="15" fill="rgb(214,135,41)" fg:x="773" fg:w="1"/><text x="98.9729%" y="847.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="821" width="0.1277%" height="15" fill="rgb(237,67,25)" fg:x="773" fg:w="1"/><text x="98.9729%" y="831.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="805" width="0.1277%" height="15" fill="rgb(222,189,50)" fg:x="773" fg:w="1"/><text x="98.9729%" y="815.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="789" width="0.1277%" height="15" fill="rgb(245,148,34)" fg:x="773" fg:w="1"/><text x="98.9729%" y="799.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="773" width="0.1277%" height="15" fill="rgb(222,29,6)" fg:x="773" fg:w="1"/><text x="98.9729%" y="783.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="757" width="0.1277%" height="15" fill="rgb(221,189,43)" fg:x="773" fg:w="1"/><text x="98.9729%" y="767.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="741" width="0.1277%" height="15" fill="rgb(207,36,27)" fg:x="773" fg:w="1"/><text x="98.9729%" y="751.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="725" width="0.1277%" height="15" fill="rgb(217,90,24)" fg:x="773" fg:w="1"/><text x="98.9729%" y="735.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="709" width="0.1277%" height="15" fill="rgb(224,66,35)" fg:x="773" fg:w="1"/><text x="98.9729%" y="719.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="693" width="0.1277%" height="15" fill="rgb(221,13,50)" fg:x="773" fg:w="1"/><text x="98.9729%" y="703.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="677" width="0.1277%" height="15" fill="rgb(236,68,49)" fg:x="773" fg:w="1"/><text x="98.9729%" y="687.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="661" width="0.1277%" height="15" fill="rgb(229,146,28)" fg:x="773" fg:w="1"/><text x="98.9729%" y="671.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="645" width="0.1277%" height="15" fill="rgb(225,31,38)" fg:x="773" fg:w="1"/><text x="98.9729%" y="655.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="629" width="0.1277%" height="15" fill="rgb(250,208,3)" fg:x="773" fg:w="1"/><text x="98.9729%" y="639.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="613" width="0.1277%" height="15" fill="rgb(246,54,23)" fg:x="773" fg:w="1"/><text x="98.9729%" y="623.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="597" width="0.1277%" height="15" fill="rgb(243,76,11)" fg:x="773" fg:w="1"/><text x="98.9729%" y="607.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="581" width="0.1277%" height="15" fill="rgb(245,21,50)" fg:x="773" fg:w="1"/><text x="98.9729%" y="591.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="565" width="0.1277%" height="15" fill="rgb(228,9,43)" fg:x="773" fg:w="1"/><text x="98.9729%" y="575.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="549" width="0.1277%" height="15" fill="rgb(208,100,47)" fg:x="773" fg:w="1"/><text x="98.9729%" y="559.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="533" width="0.1277%" height="15" fill="rgb(232,26,8)" fg:x="773" fg:w="1"/><text x="98.9729%" y="543.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="517" width="0.1277%" height="15" fill="rgb(216,166,38)" fg:x="773" fg:w="1"/><text x="98.9729%" y="527.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="501" width="0.1277%" height="15" fill="rgb(251,202,51)" fg:x="773" fg:w="1"/><text x="98.9729%" y="511.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="485" width="0.1277%" height="15" fill="rgb(254,216,34)" fg:x="773" fg:w="1"/><text x="98.9729%" y="495.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="469" width="0.1277%" height="15" fill="rgb(251,32,27)" fg:x="773" fg:w="1"/><text x="98.9729%" y="479.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="453" width="0.1277%" height="15" fill="rgb(208,127,28)" fg:x="773" fg:w="1"/><text x="98.9729%" y="463.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="437" width="0.1277%" height="15" fill="rgb(224,137,22)" fg:x="773" fg:w="1"/><text x="98.9729%" y="447.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="421" width="0.1277%" height="15" fill="rgb(254,70,32)" fg:x="773" fg:w="1"/><text x="98.9729%" y="431.50"></text></g><g><title>burst`burst::ntfa::NTFABuilder::intersect (1 samples, 0.13%)</title><rect x="98.7229%" y="405" width="0.1277%" height="15" fill="rgb(229,75,37)" fg:x="773" fg:w="1"/><text x="98.9729%" y="415.50"></text></g><g><title>burst`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.13%)</title><rect x="98.7229%" y="389" width="0.1277%" height="15" fill="rgb(252,64,23)" fg:x="773" fg:w="1"/><text x="98.9729%" y="399.50"></text></g><g><title>burst`alloc::raw_vec::finish_grow (1 samples, 0.13%)</title><rect x="98.7229%" y="373" width="0.1277%" height="15" fill="rgb(232,162,48)" fg:x="773" fg:w="1"/><text x="98.9729%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.13%)</title><rect x="98.7229%" y="357" width="0.1277%" height="15" fill="rgb(246,160,12)" fg:x="773" fg:w="1"/><text x="98.9729%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.13%)</title><rect x="98.7229%" y="341" width="0.1277%" height="15" fill="rgb(247,166,0)" fg:x="773" fg:w="1"/><text x="98.9729%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1 samples, 0.13%)</title><rect x="98.7229%" y="325" width="0.1277%" height="15" fill="rgb(249,219,21)" fg:x="773" fg:w="1"/><text x="98.9729%" y="335.50"></text></g><g><title>burst`burst::ntfa::dedup_merge (1 samples, 0.13%)</title><rect x="98.8506%" y="1509" width="0.1277%" height="15" fill="rgb(205,209,3)" fg:x="774" fg:w="1"/><text x="99.1006%" y="1519.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (1 samples, 0.13%)</title><rect x="98.9783%" y="1509" width="0.1277%" height="15" fill="rgb(243,44,1)" fg:x="775" fg:w="1"/><text x="99.2283%" y="1519.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (2 samples, 0.26%)</title><rect x="99.1060%" y="1509" width="0.2554%" height="15" fill="rgb(206,159,16)" fg:x="776" fg:w="2"/><text x="99.3560%" y="1519.50"></text></g><g><title>all (783 samples, 100%)</title><rect x="0.0000%" y="1637" width="100.0000%" height="15" fill="rgb(244,77,30)" fg:x="0" fg:w="783"/><text x="0.2500%" y="1647.50"></text></g><g><title>dyld`start (57 samples, 7.28%)</title><rect x="92.7203%" y="1621" width="7.2797%" height="15" fill="rgb(218,69,12)" fg:x="726" fg:w="57"/><text x="92.9703%" y="1631.50">dyld`start</text></g><g><title>burst`main (57 samples, 7.28%)</title><rect x="92.7203%" y="1605" width="7.2797%" height="15" fill="rgb(212,87,7)" fg:x="726" fg:w="57"/><text x="92.9703%" y="1615.50">burst`main</text></g><g><title>burst`std::rt::lang_start_internal (57 samples, 7.28%)</title><rect x="92.7203%" y="1589" width="7.2797%" height="15" fill="rgb(245,114,25)" fg:x="726" fg:w="57"/><text x="92.9703%" y="1599.50">burst`std:..</text></g><g><title>burst`std::rt::lang_start::_{{closure}} (57 samples, 7.28%)</title><rect x="92.7203%" y="1573" width="7.2797%" height="15" fill="rgb(210,61,42)" fg:x="726" fg:w="57"/><text x="92.9703%" y="1583.50">burst`std:..</text></g><g><title>burst`std::sys_common::backtrace::__rust_begin_short_backtrace (57 samples, 7.28%)</title><rect x="92.7203%" y="1557" width="7.2797%" height="15" fill="rgb(211,52,33)" fg:x="726" fg:w="57"/><text x="92.9703%" y="1567.50">burst`std:..</text></g><g><title>burst`burst::main (57 samples, 7.28%)</title><rect x="92.7203%" y="1541" width="7.2797%" height="15" fill="rgb(234,58,33)" fg:x="726" fg:w="57"/><text x="92.9703%" y="1551.50">burst`burs..</text></g><g><title>burst`burst::synthesis::synthesize (57 samples, 7.28%)</title><rect x="92.7203%" y="1525" width="7.2797%" height="15" fill="rgb(220,115,36)" fg:x="726" fg:w="57"/><text x="92.9703%" y="1535.50">burst`burs..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.64%)</title><rect x="99.3614%" y="1509" width="0.6386%" height="15" fill="rgb(243,153,54)" fg:x="778" fg:w="5"/><text x="99.6114%" y="1519.50"></text></g></svg></svg>